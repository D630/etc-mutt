ignore *
unignore from: subject to cc date x-mailer x-url user-agent
hdr_order date from to cc subject
alternative_order text/plain text/enriched multipart/alternative text/html
auto_view text/html
mime_lookup application/octet-stream
charset-hook ^gb2312$ gb18030
charset-hook ^euc-jp$ euc-jp-ms
open-hook \\.gz$ "gzip -cd '%f' > '%t'"
close-hook \\.gz$ "gzip -c '%t' > '%f'"
append-hook \\.gz$ "gzip -c '%t' >> '%f'"
open-hook \\.bz2$ "bzip2 -cd '%f' > '%t'"
close-hook \\.bz2$ "bzip2 -c '%t' > '%f'"
append-hook \\.bz2$ "bzip2 -c '%t' >> '%f'"
open-hook \\.xz$ "xz -cd %f > %t"
close-hook \\.xz$ "xz -c %t > %f"
append-hook \\.xz$ "xz -c %t >> %f"

# -- CONFIGS.

set abort_nosubject=no
#        Type: quadoption
#        Default: ask-yes
#
#        If set to yes, when composing messages and no subject is
#        given   at  the  subject  prompt,  composition  will  be
#        aborted.  If set to no, composing messages with no  sub‐
#        ject given at the subject prompt will never be aborted.
#
set abort_unmodified=no
#        Type: quadoption
#        Default: yes
#
#        If  set  to  yes,  composition  will automatically abort
#        after editing the message body if no changes are made to
#        the  file  (this check only happens after the first edit
#        of the file).  When set to no, composition will never be
#        aborted.
#
#alias_file
#        Type: path
#        Default: “~/.muttrc”
#
#        The default file in which to save aliases created by the
#        <create-alias> function. Entries added to this file  are
#        encoded   in   the  character  set  specified  by  $con‐
#        fig_charset if it is set or the  current  character  set
#        otherwise.
#
#        Note:  Mutt will not automatically source this file; you
#        must explicitly use the “source” command for  it  to  be
#        executed in case this option points to a dedicated alias
#        file.
#
#        The default for this option is the currently used muttrc
#        file, or “~/.muttrc” if no user muttrc was found.
#
#alias_format
#        Type: string
#        Default: “%4n %2f %t %-10a   %r”
#
#        Specifies  the  format  of  the  data  displayed for the
#        “alias” menu.  The following  printf(3)-style  sequences
#        are available:
#        %a     alias name
#        %f     flags  - currently, a “d” for an alias marked for
#                deletion
#        %n     index number
#        %r     address which alias expands to
#        %t     character which indicates if the alias is  tagged
#                for inclusion
#
#allow_8bit
#        Type: boolean
#        Default: yes
#
#        Controls  whether 8-bit data is converted to 7-bit using
#        either Quoted- Printable or Base64 encoding when sending
#        mail.
#
#allow_ansi
#        Type: boolean
#        Default: no
#
#        Controls whether ANSI color codes in messages (and color
#        tags in rich text messages) are to be interpreted.  Mes‐
#        sages  containing  these  codes  are  rare,  but if this
#        option is set, their text will be  colored  accordingly.
#        Note that this may override your color choices, and even
#        present  a  security  problem,  since  a  message  could
#        include a line like
#
#        [-- PGP output follows ...
#
#        and give it the same color as your attachment color (see
#        also $crypt_timestamp).
#
#arrow_cursor
#        Type: boolean
#        Default: no
#
#        When set, an arrow (“->”) will be used to  indicate  the
#        current entry in menus instead of highlighting the whole
#        line.  On slow network or modem  links  this  will  make
#        response  faster  because  there  is less that has to be
#        redrawn on the screen when moving to the next or  previ‐
#        ous entries in the menu.
#
set ascii_chars=yes
#        Type: boolean
#        Default: no
#
#        If  set,  Mutt will use plain ASCII characters when dis‐
#        playing thread and  attachment  trees,  instead  of  the
#        default ACS characters.
#
#askbcc
#        Type: boolean
#        Default: no
#
#        If set, Mutt will prompt you for blind-carbon-copy (Bcc)
#        recipients before editing an outgoing message.
#
#askcc
#        Type: boolean
#        Default: no
#
#        If set, Mutt will prompt you for carbon-copy (Cc) recip‐
#        ients before editing the body of an outgoing message.
#
#assumed_charset
#        Type: string
#        Default: “”
#
#        This  variable  is  a  colon-separated list of character
#        encoding schemes for messages without character encoding
#        indication.   Header  field values and message body con‐
#        tent without  character  encoding  indication  would  be
#        assumed  that  they are written in one of this list.  By
#        default, all the header fields and message body  without
#        any charset indication are assumed to be in “us-ascii”.
#
#        For example, Japanese users might prefer this:
#
#        set assumed_charset=”iso-2022-jp:euc-jp:shift_jis:utf-8”
#
#        However, only the first content is valid for the message
#        body.
#
#attach_charset
#        Type: string
#        Default: “”
#
#        This variable is a  colon-separated  list  of  character
#        encoding  schemes  for  text file attachments. Mutt uses
#        this  setting  to  guess  which  encoding  files   being
#        attached  are  encoded  in  to  convert them to a proper
#        character set given in $send_charset.
#
#        If unset, the value of $charset will  be  used  instead.
#        For  example, the following configuration would work for
#        Japanese text handling:
#
#        set attach_charset=”iso-2022-jp:euc-jp:shift_jis:utf-8”
#
#        Note: for Japanese users, “iso-2022-*” must  be  put  at
#        the head of the value as shown above if included.
#
#attach_format
#        Type: string
#        Default: “%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] ”
#
#        This  variable  describes the format of the “attachment”
#        menu.   The  following  printf(3)-style  sequences   are
#        understood:
#        %C     charset
#        %c     requires charset conversion (“n” or “c”)
#        %D     deleted flag
#        %d     description
#        %e     MIME content-transfer-encoding
#        %f     filename
#        %I     disposition (“I” for inline, “A” for attachment)
#        %m     major MIME type
#        %M     MIME subtype
#        %n     attachment number
#        %Q     “Q”, if MIME part qualifies for attachment count‐
#                ing
#        %s     size
#        %t     tagged flag
#        %T     graphic tree characters
#        %u     unlink (=to delete) flag
#        %X     number of qualifying MIME parts in this part  and
#                its  children  (please see the “attachments” sec‐
#                tion for possible speed effects)
#        %>X    right justify the rest of the string and pad with
#                character “X”
#        %|X    pad to the end of the line with character “X”
#        %*X    soft-fill with character “X” as pad
#
#        For an explanation of “soft-fill”, see the $index_format
#        documentation.
#
#attach_sep
#        Type: string
#        Default: “\n”
#
#        The separator to add between attachments when  operating
#        (saving,  printing,  piping,  etc)  on  a list of tagged
#        attachments.
#
#attach_split
#        Type: boolean
#        Default: yes
#
#        If this  variable  is  unset,  when  operating  (saving,
#        printing,  piping, etc) on a list of tagged attachments,
#        Mutt will concatenate the attachments and  will  operate
#        on  them as a single attachment. The $attach_sep separa‐
#        tor is added after each attachment. When set, Mutt  will
#        operate on the attachments one by one.
#
#attribution
#        Type: string
#        Default: “On %d, %n wrote:”
#
#        This is the string that will precede a message which has
#        been included in a reply.  For a full listing of defined
#        printf(3)-like  sequences see the section on $index_for‐
#        mat.
#
set auto_tag=yes
#        Type: boolean
#        Default: no
#
#        When set, functions in the index  menu  which  affect  a
#        message will be applied to all tagged messages (if there
#        are any).  When unset, you must first use the  <tag-pre‐
#        fix> function (bound to “;” by default) to make the next
#        function apply to all tagged messages.
#
#autoedit
#        Type: boolean
#        Default: no
#
#        When set along with $edit_headers, Mutt  will  skip  the
#        initial send-menu (prompting for subject and recipients)
#        and allow you to immediately begin editing the  body  of
#        your  message.  The send-menu may still be accessed once
#        you have finished editing the body of your message.
#
#        Note: when this option is set, you cannot use send-hooks
#        that  depend  on  the  recipients  when  composing a new
#        (non-reply) message, as the initial list  of  recipients
#        is empty.
#
#        Also see $fast_reply.
#
set beep=no
#        Type: boolean
#        Default: yes
#
#        When  this variable is set, mutt will beep when an error
#        occurs.
#
#beep_new
#        Type: boolean
#        Default: no
#
#        When this variable is set, mutt will  beep  whenever  it
#        prints  a  message  notifying  you of new mail.  This is
#        independent of the setting of the $beep variable.
#
#bounce
#        Type: quadoption
#        Default: ask-yes
#
#        Controls whether you will be asked to  confirm  bouncing
#        messages.  If set to yes you don't get asked if you want
#        to bounce a message. Setting this variable to no is  not
#        generally  useful, and thus not recommended, because you
#        are unable to bounce messages.
#
set bounce_delivered=no
#        Type: boolean
#        Default: yes
#
#        When this variable is  set,  mutt  will  include  Deliv‐
#        ered-To  headers  when bouncing messages.  Postfix users
#        may wish to unset this variable.
#
#        Note: On Debian systems, this option is unset by default
#        in /etc/Muttrc.
#
#braille_friendly
#        Type: boolean
#        Default: no
#
#        When this variable is set, mutt will place the cursor at
#        the beginning of the current line in  menus,  even  when
#        the  $arrow_cursor  variable  is unset, making it easier
#        for blind persons using Braille displays to follow these
#        menus.  The option is unset by default because many vis‐
#        ual terminals don't permit making the cursor invisible.
#
set certificate_file="~/.mutt/certificates"
#        Type: path
#        Default: “~/.mutt_certificates”
#
#        This variable specifies the file where the  certificates
#        you  trust  are  saved.  When  an unknown certificate is
#        encountered, you are asked if you accept it or  not.  If
#        you accept it, the certificate can also be saved in this
#        file and further connections are automatically accepted.
#
#        You can also manually add CA certificates in this  file.
#        Any  server certificate that is signed with one of these
#        CA certificates is also automatically accepted.
#
#        Example:
#
#        set certificate_file=~/.mutt/certificates
#
#charset
#        Type: string
#        Default: “”
#
#        Character set your terminal uses to  display  and  enter
#        textual   data.    It   is   also   the   fallback   for
#        $send_charset.
#
#        Upon startup Mutt tries to derive this value from  envi‐
#        ronment variables such as $LC_CTYPE or $LANG.
#
#        Note:  It  should only be set in case Mutt isn't able to
#        determine the character set used correctly.
#
#check_mbox_size
#        Type: boolean
#        Default: no
#
#        When this variable is  set,  mutt  will  use  file  size
#        attribute  instead  of access time when checking for new
#        mail in mbox and mmdf folders.
#
#        This variable is unset by default  and  should  only  be
#        enabled  when  new mail detection for these folder types
#        is unreliable or doesn't work.
#
#        Note that enabling this variable  should  happen  before
#        any  “mailboxes” directives occur in configuration files
#        regarding mbox or mmdf folders  because  mutt  needs  to
#        determine  the initial new mail status of such a mailbox
#        by performing a fast mailbox scan when  it  is  defined.
#        Afterwards  the  new mail status is tracked by file size
#        changes.
#
#check_new
#        Type: boolean
#        Default: yes
#
#        Note: this option only  affects  maildir  and  MH  style
#        mailboxes.
#
#        When  set,  Mutt will check for new mail delivered while
#        the mailbox is open.  Especially with MH mailboxes, this
#        operation  can  take  quite  some time since it involves
#        scanning the directory and checking each file to see  if
#        it  has  already  been  looked  at.  If this variable is
#        unset, no check for new  mail  is  performed  while  the
#        mailbox is open.
#
#collapse_unread
#        Type: boolean
#        Default: yes
#
#        When  unset,  Mutt will not collapse a thread if it con‐
#        tains any unread messages.
#
set compose_format="COMPOSE  [Approx. msg size: %l   Atts: %a]%>-"
#        Type: string
#        Default: “-- Mutt: Compose  [Approx. msg size: %l   Atts: %a]%>-”
#
#        Controls the format of the status line displayed in  the
#        “compose”  menu.  This string is similar to $status_for‐
#        mat, but has its own set of printf(3)-like sequences:
#        %a     total number of attachments
#        %h     local hostname
#        %l     approximate size (in bytes) of the  current  mes‐
#                sage
#        %v     Mutt version string
#
#        See  the  text  describing the $status_format option for
#        more information on how to set $compose_format.
#
#config_charset
#        Type: string
#        Default: “”
#
#        When defined, Mutt will recode commands in rc files from
#        this  encoding to the current character set as specified
#        by $charset and aliases written to $alias_file from  the
#        current character set.
#
#        Please  note  that  if  setting $charset it must be done
#        before setting $config_charset.
#
#        Recoding should be  avoided  as  it  may  render  uncon‐
#        vertable  characters as question marks which can lead to
#        undesired side effects (for example in  regular  expres‐
#        sions).
#
#confirmappend
#        Type: boolean
#        Default: yes
#
#        When set, Mutt will prompt for confirmation when append‐
#        ing messages to an existing mailbox.
#
#confirmcreate
#        Type: boolean
#        Default: yes
#
#        When set, Mutt will prompt for confirmation when  saving
#        messages  to  a  mailbox which does not yet exist before
#        creating it.
#
set connect_timeout=20
#        Type: number
#        Default: 30
#
#        Causes Mutt to timeout a network connection  (for  IMAP,
#        POP  or  SMTP) after this many seconds if the connection
#        is not able to be established.  A negative value  causes
#        Mutt  to wait indefinitely for the connection attempt to
#        succeed.
#
#content_type
#        Type: string
#        Default: “text/plain”
#
#        Sets the default Content-Type for the body of newly com‐
#        posed messages.
#
#copy
#        Type: quadoption
#        Default: yes
#
#        This  variable  controls  whether  or not copies of your
#        outgoing messages will be saved  for  later  references.
#        Also  see  $record,  $save_name,  $force_name  and “fcc-
#        hook”.
#
#crypt_autoencrypt
#        Type: boolean
#        Default: no
#
#        Setting this variable will cause Mutt to always  attempt
#        to PGP encrypt outgoing messages.  This is probably only
#        useful in connection to the “send-hook” command.  It can
#        be overridden by use of the pgp menu, when encryption is
#        not required  or  signing  is  requested  as  well.   If
#        $smime_is_default  is  set, then OpenSSL is used instead
#        to create S/MIME messages and settings can be overridden
#        by use of the smime menu instead.  (Crypto only)
#
#crypt_autopgp
#        Type: boolean
#        Default: yes
#
#        This variable controls whether or not mutt may automati‐
#        cally enable PGP encryption/signing for  messages.   See
#        also       $crypt_autoencrypt,      $crypt_replyencrypt,
#        $crypt_autosign, $crypt_replysign and $smime_is_default.
#
#crypt_autosign
#        Type: boolean
#        Default: no
#
#        Setting this variable will cause Mutt to always  attempt
#        to  cryptographically  sign outgoing messages.  This can
#        be overridden by use of the pgp menu,  when  signing  is
#        not  required  or  encryption  is  requested as well. If
#        $smime_is_default is set, then OpenSSL is  used  instead
#        to create S/MIME messages and settings can be overridden
#        by use of the  smime  menu  instead  of  the  pgp  menu.
#        (Crypto only)
#
#crypt_autosmime
#        Type: boolean
#        Default: yes
#
#        This variable controls whether or not mutt may automati‐
#        cally enable S/MIME encryption/signing for messages. See
#        also       $crypt_autoencrypt,      $crypt_replyencrypt,
#        $crypt_autosign, $crypt_replysign and $smime_is_default.
#
#crypt_confirmhook
#        Type: boolean
#        Default: yes
#
#        If set, then you will be prompted  for  confirmation  of
#        keys  when  using  the crypt-hook command.  If unset, no
#        such confirmation prompt will  be  presented.   This  is
#        generally  considered unsafe, especially where typos are
#        concerned.
#
#crypt_opportunistic_encrypt
#        Type: boolean
#        Default: no
#
#        Setting this variable will cause Mutt  to  automatically
#        enable and disable encryption, based on whether all mes‐
#        sage recipient keys can be located by mutt.
#
#        When this option is enabled,  mutt  will  determine  the
#        encryption  setting  each time the TO, CC, and BCC lists
#        are edited.  If $edit_headers is set, mutt will also  do
#        so each time the message is edited.
#
#        While this is set, encryption settings can't be manually
#        changed.  The pgp or smime menus provide  an  option  to
#        disable the option for a particular message.
#
#        If   $crypt_autoencrypt  or  $crypt_replyencrypt  enable
#        encryption for a message, this option will  be  disabled
#        for  the  message.  It can be manually re-enabled in the
#        pgp or smime menus.  (Crypto only)
#
#crypt_replyencrypt
#        Type: boolean
#        Default: yes
#
#        If set, automatically PGP or OpenSSL encrypt replies  to
#        messages which are encrypted.  (Crypto only)
#
#crypt_replysign
#        Type: boolean
#        Default: no
#
#        If  set,  automatically  PGP  or OpenSSL sign replies to
#        messages which are signed.
#
#        Note: this does not work on messages that are  encrypted
#        and signed!  (Crypto only)
#
#crypt_replysignencrypted
#        Type: boolean
#        Default: no
#
#        If  set,  automatically  PGP  or OpenSSL sign replies to
#        messages which are encrypted. This makes sense in combi‐
#        nation  with  $crypt_replyencrypt, because it allows you
#        to sign all messages which are automatically  encrypted.
#        This works around the problem noted in $crypt_replysign,
#        that mutt is not able to find out whether  an  encrypted
#        message is also signed.  (Crypto only)
#
#crypt_timestamp
#        Type: boolean
#        Default: yes
#
#        If set, mutt will include a time stamp in the lines sur‐
#        rounding PGP or S/MIME output, so spoofing such lines is
#        more  difficult.   If you are using colors to mark these
#        lines, and rely on these, you may  unset  this  setting.
#        (Crypto only)
#
#crypt_use_gpgme
#        Type: boolean
#        Default: no
#
#        This  variable  controls  the  use  of the GPGME-enabled
#        crypto backends.  If it is set and Mutt was  built  with
#        gpgme support, the gpgme code for S/MIME and PGP will be
#        used instead of the classic code.  Note that you need to
#        set  this  option  in  .muttrc; it won't have any effect
#        when used interactively.
#
#crypt_use_pka
#        Type: boolean
#        Default: no
#
#        Controls     whether     mutt     uses     PKA      (see
#        http://www.g10code.de/docs/pka-intro.de.pdf) during sig‐
#        nature verification (only supported by the  GPGME  back‐
#        end).
#
#crypt_verify_sig
#        Type: quadoption
#        Default: yes
#
#        If  “yes”, always attempt to verify PGP or S/MIME signa‐
#        tures.  If “ask-*”, ask whether or  not  to  verify  the
#        signature.   If  “no”,  never  attempt to verify crypto‐
#        graphic signatures.  (Crypto only)
#
set date_format="%y-%m-%d_%H_%S"
#        Type: string
#        Default: “!%a, %b %d, %Y at %I:%M:%S%p %Z”
#
#        This variable controls the format of the date printed by
#        the  “%d”  sequence in $index_format.  This is passed to
#        the strftime(3) function to process the  date,  see  the
#        man page for the proper syntax.
#
#        Unless  the  first  character  in  the  string is a bang
#        (“!”), the month and week day names are expanded accord‐
#        ing  to the locale specified in the variable $locale. If
#        the first character in the string is a bang, the bang is
#        discarded,  and the month and week day names in the rest
#        of the string are expanded in the C locale (that  is  in
#        US English).
#
#default_hook
#        Type: string
#        Default: “~f %s !~P | (~P ~C %s)”
#
#        This variable controls how “message-hook”, “reply-hook”,
#        “send-hook”, “send2-hook”, “save-hook”,  and  “fcc-hook”
#        will  be  interpreted  if they are specified with only a
#        simple regexp, instead of a matching pattern.  The hooks
#        are  expanded  when they are declared, so a hook will be
#        interpreted according to the value of this  variable  at
#        the time the hook is declared.
#
#        The  default value matches if the message is either from
#        a user matching the regular expression given, or  if  it
#        is  from  you (if the from address matches “alternates”)
#        and is to or cc'ed to a user matching the given  regular
#        expression.
#
set delete=no
#        Type: quadoption
#        Default: ask-yes
#
#        Controls whether or not messages are really deleted when
#        closing or synchronizing a mailbox.  If set to yes, mes‐
#        sages  marked  for deleting will automatically be purged
#        without prompting.  If set to no,  messages  marked  for
#        deletion will be kept in the mailbox.
#
#delete_untag
#        Type: boolean
#        Default: yes
#
#        If  this  option  is  set, mutt will untag messages when
#        marking them for deletion.  This applies when you either
#        explicitly  delete  a  message,  or  when you save it to
#        another folder.
#
#digest_collapse
#        Type: boolean
#        Default: yes
#
#        If this option is set, mutt's received-attachments  menu
#        will  not  show the subparts of individual messages in a
#        multipart/digest.  To see these subparts, press  “v”  on
#        that menu.
#
#display_filter
#        Type: path
#        Default: “”
#
#        When  set,  specifies a command used to filter messages.
#        When a message is viewed it is passed as standard  input
#        to  $display_filter,  and  the  filtered message is read
#        from the standard output.
#
#dotlock_program
#        Type: path
#        Default: “/usr/bin/mutt_dotlock”
#
#        Contains the path of the mutt_dotlock(8)  binary  to  be
#        used by mutt.
#
#dsn_notify
#        Type: string
#        Default: “”
#
#        This  variable sets the request for when notification is
#        returned.  The string consists of a comma separated list
#        (no  spaces!) of one or more of the following: never, to
#        never request notification, failure, to request  notifi‐
#        cation on transmission failure, delay, to be notified of
#        message delays, success, to be  notified  of  successful
#        transmission.
#
#        Example:
#
#        set dsn_notify=”failure,delay”
#
#        Note:  when using $sendmail for delivery, you should not
#        enable this unless you are either using  Sendmail  8.8.x
#        or  greater  or a MTA providing a sendmail(1)-compatible
#        interface supporting the -N option  for  DSN.  For  SMTP
#        delivery,  DSN  support  is  auto-detected  so  that  it
#        depends on the server whether DSN will be used or not.
#
#dsn_return
#        Type: string
#        Default: “”
#
#        This variable controls  how  much  of  your  message  is
#        returned  in DSN messages.  It may be set to either hdrs
#        to return just the message header, or full to return the
#        full message.
#
#        Example:
#
#        set dsn_return=hdrs
#
#        Note:  when using $sendmail for delivery, you should not
#        enable this unless you are either using  Sendmail  8.8.x
#        or  greater  or a MTA providing a sendmail(1)-compatible
#        interface supporting the -R option  for  DSN.  For  SMTP
#        delivery,  DSN  support  is  auto-detected  so  that  it
#        depends on the server whether DSN will be used or not.
#
#duplicate_threads
#        Type: boolean
#        Default: yes
#
#        This variable controls whether mutt, when $sort  is  set
#        to  threads,  threads  messages with the same Message-Id
#        together.  If it is set, it will indicate that it thinks
#        they are duplicates of each other with an equals sign in
#        the thread tree.
#
set edit_headers=yes
#        Type: boolean
#        Default: no
#
#        This option allows you to edit the header of your outgo‐
#        ing messages along with the body of your message.
#
#        Note  that  changes  made  to  the References: and Date:
#        headers are ignored for interoperability reasons.
#
set editor="/usr/bin/vim"
#        Type: path
#        Default: “”
#
#        This variable specifies which editor is  used  by  mutt.
#        It  defaults  to  the  value of the $VISUAL, or $EDITOR,
#        environment variable, or to the string “/usr/bin/editor”
#        if neither of those are set.
#
#        The  $editor  string may contain a %s escape, which will
#        be replaced by the name of the file to  be  edited.   If
#        the  %s  escape  does not appear in $editor, a space and
#        the name to be edited are appended.
#
#        The resulting string is then executed by running
#
#        sh -c 'string'
#
#        where string  is  the  expansion  of  $editor  described
#        above.
#
#encode_from
#        Type: boolean
#        Default: no
#
#        When  set,  mutt  will  quoted-printable encode messages
#        when they contain the string “From ” (note the  trailing
#        space)  in  the  beginning of a line.  This is useful to
#        avoid the tampering certain mail delivery and  transport
#        agents  tend  to  do  with messages (in order to prevent
#        tools from misinterpreting the line as  a  mbox  message
#        separator).
#

#escape
#        Type: string
#        Default: “~”
#
#        Escape character to use for functions  in  the  built-in
#        editor.
#
set fast_reply=yes
#        Type: boolean
#        Default: no
#
#        When  set, the initial prompt for recipients and subject
#        are skipped when replying to messages, and  the  initial
#        prompt for subject is skipped when forwarding messages.
#
#        Note:  this  variable  has  no effect when the $autoedit
#        variable is set.
#
#fcc_attach
#        Type: quadoption
#        Default: yes
#
#        This variable controls whether  or  not  attachments  on
#        outgoing  messages are saved along with the main body of
#        your message.
#
set fcc_clear=yes
#        Type: boolean
#        Default: no
#
#        When this variable is set, FCCs  will  be  stored  unen‐
#        crypted  and  unsigned,  even when the actual message is
#        encrypted and/or signed.  (PGP only)
#
set folder_format="%N %8s    %d    %f"
#        Type: string
#        Default: “%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f”
#
#        This variable allows you to customize the  file  browser
#        display  to your personal taste.  This string is similar
#        to $index_format, but has its own set of  printf(3)-like
#        sequences:
#        %C     current file number
#        %d     date/time folder was last modified
#        %D     date/time   folder   was   last   modified  using
#                $date_format.
#        %f     filename (“/” is appended to directory names, “@”
#                to symbolic links and “*” to executable files)
#        %F     file permissions
#        %g     group name (or numeric gid, if missing)
#        %l     number of hard links
#        %N     N if folder has new mail, blank otherwise
#        %s     size in bytes
#        %t     “*” if the file is tagged, blank otherwise
#        %u     owner name (or numeric uid, if missing)
#        %>X    right justify the rest of the string and pad with
#                character “X”
#        %|X    pad to the end of the line with character “X”
#        %*X    soft-fill with character “X” as pad
#
#        For an explanation of “soft-fill”, see the $index_format
#        documentation.
#
#followup_to
#        Type: boolean
#        Default: yes
#
#        Controls  whether  or not the “Mail-Followup-To:” header
#        field is generated when sending mail.   When  set,  Mutt
#        will  generate  this  field  when  you are replying to a
#        known mailing list, specified with  the  “subscribe”  or
#        “lists” commands.
#
#        This field has two purposes.  First, preventing you from
#        receiving duplicate copies of replies to messages  which
#        you send to mailing lists, and second, ensuring that you
#        do get a reply separately for any messages sent to known
#        lists to which you are not subscribed.
#
#        The header will contain only the list's address for sub‐
#        scribed lists, and both the list address  and  your  own
#        email  address  for  unsubscribed  lists.   Without this
#        header, a group reply to your message  sent  to  a  sub‐
#        scribed  list  will  be  sent  to both the list and your
#        address, resulting in two copies of the same  email  for
#        you.
#
#force_name
#        Type: boolean
#        Default: no
#
#        This variable is similar to $save_name, except that Mutt
#        will store a copy of your outgoing message by the  user‐
#        name  of  the  address  you  are sending to even if that
#        mailbox does not exist.
#
#        Also see the $record variable.
#
#forward_decode
#        Type: boolean
#        Default: yes
#
#        Controls the decoding  of  complex  MIME  messages  into
#        text/plain  when  forwarding  a  message.   The  message
#        header is also RFC2047 decoded.  This variable  is  only
#        used,  if  $mime_forward  is unset, otherwise $mime_for‐
#        ward_decode is used instead.
#
#forward_decrypt
#        Type: boolean
#        Default: yes
#
#        Controls the handling of encrypted  messages  when  for‐
#        warding a message.  When set, the outer layer of encryp‐
#        tion is stripped off.  This variable  is  only  used  if
#        $mime_forward  is set and $mime_forward_decode is unset.
#        (PGP only)
#
#forward_edit
#        Type: quadoption
#        Default: yes
#
#        This quadoption controls whether  or  not  the  user  is
#        automatically  placed in the editor when forwarding mes‐
#        sages.  For those who always want  to  forward  with  no
#        modification, use a setting of “no”.
#
set forward_format="[Fwd: %s]"
#        Type: string
#        Default: “[%a: %s]”
#
#        This variable controls the default subject when forward‐
#        ing a message.  It uses the same format sequences as the
#        $index_format variable.
#
set forward_quote=yes
#        Type: boolean
#        Default: no
#
#        When  set,  forwarded messages included in the main body
#        of the message (when $mime_forward  is  unset)  will  be
#        quoted using $indent_string.
#
#gecos_mask
#        Type: regular expression
#        Default: “^[^,]*”
#
#        A  regular  expression  used  by mutt to parse the GECOS
#        field of a password entry when expanding the alias.  The
#        default value will return the string up to the first “,”
#        encountered.  If the GECOS field contains a string  like
#        “lastname, firstname” then you should set it to “.*”.
#
#        This  can  be  useful if you see the following behavior:
#        you address an e-mail to user  ID  “stevef”  whose  full
#        name  is  “Steve Franklin”.  If mutt expands “stevef” to
#        “”Franklin” stevef@foo.bar”  then  you  should  set  the
#        $gecos_mask  to a regular expression that will match the
#        whole name so mutt will expand “Franklin” to  “Franklin,
#        Steve”.
#
#hdrs
#        Type: boolean
#        Default: yes
#
#        When  unset,  the  header  fields  normally added by the
#        “my_hdr” command are not created.  This variable must be
#        unset  before  composing  a  new  message or replying in
#        order to take effect.  If set, the user  defined  header
#        fields are added to every new message.
#
#set header
#        Type: boolean
#        Default: no
#
#        When  set,  this  variable  causes  Mutt  to include the
#        header of the message you are replying to into the  edit
#        buffer.  The $weed setting applies.
#
set header_cache="~/.mutt/cache/headers"
#        Type: path
#        Default: “”
#
#        This  variable  points to the header cache database.  If
#        pointing to a directory Mutt will contain a header cache
#        database  file  per  folder,  if pointing to a file that
#        file will be a single global header cache. By default it
#        is unset so no header caching will be used.
#
#        Header  caching  can  greatly improve speed when opening
#        POP, IMAP MH  or  Maildir  folders,  see  “caching”  for
#        details.
#
#header_cache_compress
#        Type: boolean
#        Default: yes
#
#        When  mutt  is  compiled  with  qdbm  or tokyocabinet as
#        header cache backend, this option determines whether the
#        database  will  be  compressed.   Compression results in
#        database files roughly being  one  fifth  of  the  usual
#        diskspace,  but the decompression can result in a slower
#        opening of cached folder(s) which in  general  is  still
#        much faster than opening non header cached folders.
#
set help=no
#        Type: boolean
#        Default: yes
#
#        When  set,  help  lines  describing the bindings for the
#        major functions provided by each menu are  displayed  on
#        the first line of the screen.
#
#        Note: The binding will not be displayed correctly if the
#        function is bound to a sequence  rather  than  a  single
#        keystroke.   Also, the help line may not be updated if a
#        binding is changed while Mutt is  running.   Since  this
#        variable  is  primarily  aimed  at new users, neither of
#        these should present a major problem.
#
set hidden_host=yes
#        Type: boolean
#        Default: no
#
#        When set, mutt will skip the host name part of $hostname
#        variable when adding the domain part to addresses.  This
#        variable does not affect the generation of  Message-IDs,
#        and  it  will  not  lead  to  the cut-off of first-level
#        domains.
#
set hide_limited=yes
#        Type: boolean
#        Default: no
#
#        When set, mutt will not show the  presence  of  messages
#        that are hidden by limiting, in the thread tree.
#
#hide_missing
#        Type: boolean
#        Default: no
#
#        When  set,  mutt  will  not show the presence of missing
#        messages in the thread tree.
#
set hide_thread_subject=no
#        Type: boolean
#        Default: yes
#
#        When set, mutt will not show the subject of messages  in
#        the thread tree that have the same subject as their par‐
#        ent or closest previously displayed sibling.
#
#hide_top_limited
#        Type: boolean
#        Default: no
#
#        When set, mutt will not show the  presence  of  messages
#        that  are  hidden  by limiting, at the top of threads in
#        the thread tree.  Note that when $hide_limited  is  set,
#        this option will have no effect.
#
set hide_top_missing=no
#        Type: boolean
#        Default: yes
#
#        When  set,  mutt  will  not show the presence of missing
#        messages at the top of threads in the thread tree.  Note
#        that when $hide_missing is set, this option will have no
#        effect.
#
#history
#        Type: number
#        Default: 10
#
#        This variable controls the size (in  number  of  strings
#        remembered)  of  the string history buffer per category.
#        The buffer is cleared each time the variable is set.
#
set history_file="~/.mutt/history"
#        Type: path
#        Default: “~/.mutthistory”
#
#        The file in which Mutt will save its history.
#
#honor_disposition
#        Type: boolean
#        Default: no
#
#        When set, Mutt will not display attachments with a  dis‐
#        position  of “attachment” inline even if it could render
#        the part to plain text. These MIME  parts  can  only  be
#        viewed from the attachment menu.
#
#        If  unset,  Mutt will render all MIME parts it can prop‐
#        erly transform to plain text.
#
#honor_followup_to
#        Type: quadoption
#        Default: yes
#
#        This variable controls whether or not a Mail-Followup-To
#        header is honored when group-replying to a message.
#
#ignore_linear_white_space
#        Type: boolean
#        Default: no
#
#        This    option   replaces   linear-white-space   between
#        encoded-word and text to a single space to  prevent  the
#        display  of  MIME-encoded  “Subject:”  field  from being
#        divided into multiple lines.
#
#ignore_list_reply_to
#        Type: boolean
#        Default: no
#
#        Affects the behavior of the <reply> function when reply‐
#        ing  to  messages  from mailing lists (as defined by the
#        “subscribe” or “lists”  commands).   When  set,  if  the
#        “Reply-To:”  field is set to the same value as the “To:”
#        field, Mutt assumes that the “Reply-To:” field  was  set
#        by  the  mailing list to automate responses to the list,
#        and will ignore this field.  To direct a response to the
#        mailing  list  when  this  option is set, use the <list-
#        reply> function; <group-reply> will reply  to  both  the
#        sender and the list.
#
set imap_authenticators="login"
#        Type: string
#        Default: “”
#
#        This is a colon-delimited list of authentication methods
#        mutt may attempt to use to log in to an IMAP server,  in
#        the  order mutt should try them.  Authentication methods
#        are  either  “login”  or  the  right  side  of  an  IMAP
#        “AUTH=xxx”  capability  string, e.g. “digest-md5”, “gss‐
#        api” or “cram-md5”. This option is case-insensitive.  If
#        it's  unset  (the  default)  mutt will try all available
#        methods, in order from most-secure to least-secure.
#
#        Example:
#
#        set imap_authenticators=”gssapi:cram-md5:login”
#
#        Note: Mutt will only fall back to  other  authentication
#        methods  if  the  previous methods are unavailable. If a
#        method is available but authentication fails, mutt  will
#        not connect to the IMAP server.
#
set imap_check_subscribed=yes
#        Type: boolean
#        Default: no
#
#        When  set, mutt will fetch the set of subscribed folders
#        from your server on connection, and add them to the  set
#        of  mailboxes  it  polls for new mail just as if you had
#        issued individual “mailboxes” commands.
#
#imap_delim_chars
#        Type: string
#        Default: “/.”
#
#        This contains the list of  characters  which  you  would
#        like  to  treat as folder separators for displaying IMAP
#        paths. In particular it helps in using the “=”  shortcut
#        for your folder variable.
#
#imap_headers
#        Type: string
#        Default: “”
#
#        Mutt  requests  these  header  fields in addition to the
#        default headers (“Date:”,  “From:”,  “Subject:”,  “To:”,
#        “Cc:”,  “Message-Id:”,  “References:”,  “Content-Type:”,
#        “Content-Description:”,   “In-Reply-To:”,   “Reply-To:”,
#        “Lines:”,  “List-Post:”,  “X-Label:”)  from IMAP servers
#        before displaying the index menu. You may  want  to  add
#        more headers for spam detection.
#
#        Note:  This  is  a space separated list, items should be
#        uppercase and not contain the  colon,  e.g.  “X-BOGOSITY
#        X-SPAM-STATUS”  for  the  “X-Bogosity:” and “X-Spam-Sta‐
#        tus:” header fields.
#
set imap_idle=yes
#        Type: boolean
#        Default: no
#
#        When set, mutt will attempt to use the IMAP IDLE  exten‐
#        sion  to check for new mail in the current mailbox. Some
#        servers (dovecot was the inspiration  for  this  option)
#        react badly to mutt's implementation. If your connection
#        seems to freeze up periodically, try unsetting this.
#
set imap_keepalive=150
#        Type: number
#        Default: 300
#
#        This variable specifies the maximum amount  of  time  in
#        seconds  that  mutt  will  wait before polling open IMAP
#        connections, to prevent the  server  from  closing  them
#        before  mutt has finished with them. The default is well
#        within the RFC-specified minimum amount of time (30 min‐
#        utes)  before  a  server  is  allowed to do this, but in
#        practice the RFC does get violated every now  and  then.
#        Reduce  this number if you find yourself getting discon‐
#        nected from your IMAP server due to inactivity.
#
set imap_list_subscribed=yes
#        Type: boolean
#        Default: no
#
#        This variable configures whether  IMAP  folder  browsing
#        will  look  for  only subscribed folders or all folders.
#        This can be toggled in the IMAP browser with  the  <tog‐
#        gle-subscribed> function.
#
#imap_login
#        Type: string
#        Default: “”
#
#        Your login name on the IMAP server.
#
#        This variable defaults to the value of $imap_user.
#
#imap_pass
#        Type: string
#        Default: “”
#
#        Specifies the password for your IMAP account.  If unset,
#        Mutt will prompt you for your password when  you  invoke
#        the  <imap-fetch-mail>  function  or try to open an IMAP
#        folder.
#
#        Warning: you should only use this option when you are on
#        a  fairly secure machine, because the superuser can read
#        your muttrc even if you are the only one  who  can  read
#        the file.
#
set imap_passive=no
#        Type: boolean
#        Default: yes
#
#        When  set,  mutt  will  not open new IMAP connections to
#        check for new mail.  Mutt will only check for  new  mail
#        over  existing  IMAP connections.  This is useful if you
#        don't want to be prompted to user/password pairs on mutt
#        invocation, or if opening the connection is slow.
#
#imap_peek
#        Type: boolean
#        Default: yes
#
#        When  set,  mutt will avoid implicitly marking your mail
#        as read whenever you fetch a message  from  the  server.
#        This  is generally a good thing, but can make closing an
#        IMAP folder  somewhat  slower.  This  option  exists  to
#        appease speed freaks.
#
#imap_pipeline_depth
#        Type: number
#        Default: 15
#
#        Controls  the number of IMAP commands that may be queued
#        up before they are sent to the server. A deeper pipeline
#        reduces  the  amount  of  time  mutt  must  wait for the
#        server, and can make IMAP servers feel much more respon‐
#        sive.  But  not  all  servers correctly handle pipelined
#        commands, so if you have problems you might want to  try
#        setting this variable to 0.
#
#        Note:  Changes  to  this variable have no effect on open
#        connections.
#
#imap_servernoise
#        Type: boolean
#        Default: yes
#
#        When set, mutt will display warning  messages  from  the
#        IMAP  server as error messages. Since these messages are
#        often harmless, or generated due to configuration  prob‐
#        lems  on  the  server which are out of the users' hands,
#        you may wish to suppress them at some point.
#
#imap_user
#        Type: string
#        Default: “”
#
#        The name of the user whose mail you intend to access  on
#        the IMAP server.
#
#        This  variable  defaults  to your user name on the local
#        machine.
#
#implicit_autoview
#        Type: boolean
#        Default: no
#
#        If set to “yes”, mutt will look for a mailcap entry with
#        the  “copiousoutput”  flag set for every MIME attachment
#        it doesn't have an internal viewer defined for.  If such
#        an  entry  is found, mutt will use the viewer defined in
#        that entry to convert the body part to text  form.  MIME
#        attachments  with  'text' types, with the only exception
#        of text/html, are excluded: they will be shown  as  they
#        are unless auto_view is specified.
#
set include=yes
#        Type: quadoption
#        Default: ask-yes
#
#        Controls whether or not a copy of the message(s) you are
#        replying to is included in your reply.
#
#include_onlyfirst
#        Type: boolean
#        Default: no
#
#        Controls whether or not Mutt  includes  only  the  first
#        attachment of the message you are replying.
#
#indent_string
#        Type: string
#        Default: “> ”
#
#        Specifies  the  string  to  prepend to each line of text
#        quoted in a message to which you are replying.  You  are
#        strongly  encouraged  not  to  change  this value, as it
#        tends to agitate the more fanatical netizens.
#
#        The value of this option is ignored if  $text_flowed  is
#        set,  too  because  the  quoting  mechanism  is strictly
#        defined for format=flowed.
#
#        This option is a format string, please see the  descrip‐
#        tion  of  $index_format  for  supported  printf(3)-style
#        sequences.
#
set index_format="%Z:%S| %[%V %a %Y-%m-%d %H:%M] | %-30.30.F | %s %*"
#        Type: string
#        Default: “%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s”
#
#        This variable allows you to customize the message  index
#        display to your personal taste.
#
#        “Format  strings” are similar to the strings used in the
#        C function printf(3) to format output (see the man  page
#        for  more details).  The following sequences are defined
#        in Mutt:
#        %a     address of the author
#        %A     reply-to address (if present; otherwise:  address
#                of author)
#        %b     filename  of  the  original message folder (think
#                mailbox)
#        %B     the list to which the letter was  sent,  or  else
#                the folder name (%b).
#        %c     number of characters (bytes) in the message
#        %C     current message number
#        %d     date and time of the message in the format speci‐
#                fied by $date_format converted to  sender's  time
#                zone
#        %D     date and time of the message in the format speci‐
#                fied by $date_format converted to the local  time
#                zone
#        %e     current message number in thread
#        %E     number of messages in current thread
#        %f     sender  (address  +  real  name), either From: or
#                Return-Path:
#        %F     author name, or recipient name if the message  is
#                from you
#        %H     spam attribute(s) of this message
#        %i     message-id of the current message
#        %l     number  of  lines  in  the message (does not work
#                with maildir, mh, and possibly IMAP folders)
#        %L     If an address in the “To:” or “Cc:” header  field
#                matches  an  address  defined  by the users “sub‐
#                scribe” command, this displays ”To  <list-name>”,
#                otherwise the same as %F.
#        %m     total number of message in the mailbox
#        %M     number  of  hidden messages if the thread is col‐
#                lapsed.
#        %N     message score
#        %n     author's real name (or address if missing)
#        %O     original save folder where  mutt  would  formerly
#                have  stashed the message: list name or recipient
#                name if not sent to a list
#        %P     progress indicator for the  built-in  pager  (how
#                much of the file has been displayed)
#        %s     subject of the message
#        %S     status of the message (“N”/“D”/“d”/“!”/“r”/*)
#        %t     “To:” field (recipients)
#        %T     the  appropriate  character  from  the  $to_chars
#                string
#        %u     user (login) name of the author
#        %v     first name of the author, or the recipient if the
#                message is from you
#        %X     number  of  attachments  (please see the “attach‐
#                ments” section for possible speed effects)
#        %y     “X-Label:” field, if present
#        %Y     “X-Label:” field, if present, and (1) not at part
#                of  a thread tree, (2) at the top of a thread, or
#                (3) “X-Label:” is different from  preceding  mes‐
#                sage's “X-Label:”.
#        %Z     message status flags
#        %{fmt} the  date and time of the message is converted to
#                sender's time zone, and “fmt” is expanded by  the
#                library function strftime(3); a leading bang dis‐
#                ables locales
#        %[fmt] the date and time of the message is converted  to
#                the local time zone, and “fmt” is expanded by the
#                library function strftime(3); a leading bang dis‐
#                ables locales
#        %(fmt) the  local  date  and  time  when the message was
#                received.  “fmt” is expanded by the library func‐
#                tion strftime(3); a leading bang disables locales
#        %<fmt> the  current local time. “fmt” is expanded by the
#                library function strftime(3); a leading bang dis‐
#                ables locales.
#        %>X    right justify the rest of the string and pad with
#                character “X”
#        %|X    pad to the end of the line with character “X”
#        %*X    soft-fill with character “X” as pad
#
#        “Soft-fill” deserves some explanation: Normal right-jus‐
#        tification  will  print  everything  to  the left of the
#        “%>”, displaying padding and whatever lies to the  right
#        only  if there's room. By contrast, soft-fill gives pri‐
#        ority to the right-hand side, guaranteeing space to dis‐
#        play  it and showing padding only if there's still room.
#        If necessary, soft-fill will eat text leftwards to  make
#        room for rightward text.
#
#        Note  that  these expandos are supported in “save-hook”,
#        “fcc-hook” and “fcc-save-hook”, too.
#
#ispell
#        Type: path
#        Default: “ispell”
#
#        How to invoke ispell (GNU's spell-checking software).
#
#keep_flagged
#        Type: boolean
#        Default: no
#
#        If set, read messages marked  as  flagged  will  not  be
#        moved  from your spool mailbox to your $mbox mailbox, or
#        as a result of a “mbox-hook” command.
#
#locale
#        Type: string
#        Default: “C”
#
#        The locale used by strftime(3) to  format  dates.  Legal
#        values  are  the  strings  your  system  accepts for the
#        locale environment variable $LC_TIME.
#
set mail_check=5
#        Type: number
#        Default: 5
#
#        This variable configures how  often  (in  seconds)  mutt
#        should  look  for  new mail. Also see the $timeout vari‐
#        able.
#
set mail_check_recent=no
#        Type: boolean
#        Default: yes
#
#        When set, Mutt will only notify you about new mail  that
#        has  been  received  since  the last time you opened the
#        mailbox.  When unset, Mutt will notify you  if  any  new
#        mail  exists  in  the mailbox, regardless of whether you
#        have visited it recently.
#
#        When $mark_old is set, Mutt does not consider the  mail‐
#        box to contain new mail if only old messages exist.
#
set mailcap_path="~/.mutt/mailcap"
#        Type: string
#        Default: “”
#
#        This  variable  specifies  which  files  to consult when
#        attempting to display MIME bodies not directly supported
#        by Mutt.
#
#mailcap_sanitize
#        Type: boolean
#        Default: yes
#
#        If  set, mutt will restrict possible characters in mail‐
#        cap % expandos to a well-defined set of safe characters.
#        This is the safe setting, but we are not sure it doesn't
#        break some more advanced MIME stuff.
#
#        DON'T CHANGE THIS SETTING UNLESS  YOU  ARE  REALLY  SURE
#        WHAT YOU ARE DOING!
#
#maildir_header_cache_verify
#        Type: boolean
#        Default: yes
#
#        Check  for Maildir unaware programs other than mutt hav‐
#        ing modified maildir files when the header cache  is  in
#        use.  This incurs one stat(2) per message every time the
#        folder is opened (which can be very slow for  NFS  fold‐
#        ers).
#
#maildir_trash
#        Type: boolean
#        Default: no
#
#        If  set,  messages  marked as deleted will be saved with
#        the maildir trashed flag  instead  of  unlinked.   Note:
#        this  only  applies to maildir-style mailboxes.  Setting
#        it will have no effect on other mailbox types.
#
set maildir_check_cur=yes
#        Type: boolean
#        Default: no
#
#        If set, mutt will poll both the new and cur  directories
#        of  a  maildir  folder  for new messages.  This might be
#        useful if other programs  interacting  with  the  folder
#        (e.g. dovecot) are moving new messages to the cur direc‐
#        tory.  Note that  setting  this  option  may  slow  down
#        polling  for  new  messages in large folders, since mutt
#        has to scan all cur messages.
#
set mark_old=no
#        Type: boolean
#        Default: yes
#
#        Controls whether or not mutt marks new  unread  messages
#        as old if you exit a mailbox without reading them.  With
#        this option set, the next time you start mutt, the  mes‐
#        sages will show up with an “O” next to them in the index
#        menu, indicating that they are old.
#
set markers=no
#        Type: boolean
#        Default: yes
#
#        Controls the display of wrapped lines  in  the  internal
#        pager.  If  set, a “+” marker is displayed at the begin‐
#        ning of wrapped lines.
#
#        Also see the $smart_wrap variable.
#
#mask
#        Type: regular expression
#        Default: “!^\.[^.]”
#
#        A regular expression used in the file  browser,  option‐
#        ally preceded by the not operator “!”.  Only files whose
#        names match this mask will be shown. The match is always
#        case-sensitive.
#
set mbox_type=Maildir
#        Type: folder magic
#        Default: mbox
#
#        The default mailbox type used when creating new folders.
#        May  be  any of “mbox”, “MMDF”, “MH” and “Maildir”. This
#        is overridden by the -m command-line option.
#
set menu_context=1
#        Type: number
#        Default: 0
#
#        This variable controls the number of  lines  of  context
#        that are given when scrolling through menus. (Similar to
#        $pager_context.)
#
#menu_move_off
#        Type: boolean
#        Default: yes
#
#        When unset, the bottom entry of menus will never  scroll
#        up  past the bottom of the screen, unless there are less
#        entries than lines.  When set, the bottom entry may move
#        off the bottom.
#
set menu_scroll=yes
#        Type: boolean
#        Default: no
#
#        When  set,  menus  will  be scrolled up or down one line
#        when you attempt to move across a screen  boundary.   If
#        unset,  the  screen  is cleared and the next or previous
#        page of the menu is displayed (useful for slow links  to
#        avoid many redraws).
#
#message_cache_clean
#        Type: boolean
#        Default: no
#
#        If  set,  mutt  will clean out obsolete entries from the
#        message cache when  the  mailbox  is  synchronized.  You
#        probably  only  want  to  set  it every once in a while,
#        since it can be a  little  slow  (especially  for  large
#        folders).
#
set message_cachedir="~/.mutt/cache/bodies"
#        Type: path
#        Default: “”
#
#        Set  this  to  a directory and mutt will cache copies of
#        messages from your IMAP and POP servers  here.  You  are
#        free to remove entries at any time.
#
#        When setting this variable to a directory, mutt needs to
#        fetch every remote message only  once  and  can  perform
#        regular  expression  searches as fast as for local fold‐
#        ers.
#
#        Also see the $message_cache_clean variable.
#
#message_format
#        Type: string
#        Default: “%s”
#
#        This is the string displayed in  the  “attachment”  menu
#        for  attachments  of  type  message/rfc822.   For a full
#        listing of defined printf(3)-like sequences see the sec‐
#        tion on $index_format.
#
#meta_key
#        Type: boolean
#        Default: no
#
#        If  set,  forces  Mutt  to interpret keystrokes with the
#        high bit (bit 8) set as if the user had pressed the  Esc
#        key  and  whatever key remains after having the high bit
#        removed.  For example, if the key pressed has  an  ASCII
#        value  of  0xf8, then this is treated as if the user had
#        pressed Esc then “x”.  This is  because  the  result  of
#        removing  the  high  bit from 0xf8 is 0x78, which is the
#        ASCII character “x”.
#
#metoo
#        Type: boolean
#        Default: no
#
#        If unset, Mutt will remove your address (see the “alter‐
#        nates”  command) from the list of recipients when reply‐
#        ing to a message.
#
#mh_purge
#        Type: boolean
#        Default: no
#
#        When unset, mutt will mimic  mh's  behavior  and  rename
#        deleted  messages  to  ,<old  file  name>  in mh folders
#        instead of really deleting them. This leaves the message
#        on disk but makes programs reading the folder ignore it.
#        If the variable is set, the message files will simply be
#        deleted.
#
#        This  option  is  similar  to $maildir_trash for Maildir
#        folders.
#
#mh_seq_flagged
#        Type: string
#        Default: “flagged”
#
#        The name of the MH sequence used for flagged messages.
#
#mh_seq_replied
#        Type: string
#        Default: “replied”
#
#        The name of the MH sequence used  to  tag  replied  mes‐
#        sages.
#
#mh_seq_unseen
#        Type: string
#        Default: “unseen”
#
#        The name of the MH sequence used for unseen messages.
#
set mime_forward=yes
#        Type: quadoption
#        Default: no
#
#        When  set,  the  message  you  are  forwarding  will  be
#        attached as a separate message/rfc822 MIME part  instead
#        of  included  in  the main body of the message.  This is
#        useful for forwarding MIME messages so the receiver  can
#        properly view the message as it was delivered to you. If
#        you like to switch between MIME and not MIME  from  mail
#        to mail, set this variable to “ask-no” or “ask-yes”.
#
#        Also see $forward_decode and $mime_forward_decode.
#
#mime_forward_decode
#        Type: boolean
#        Default: no
#
#        Controls  the  decoding  of  complex  MIME messages into
#        text/plain when forwarding a message while $mime_forward
#        is set. Otherwise $forward_decode is used instead.
#
#mime_forward_rest
#        Type: quadoption
#        Default: yes
#
#        When  forwarding  multiple attachments of a MIME message
#        from the attachment menu, attachments  which  cannot  be
#        decoded  in  a reasonable manner will be attached to the
#        newly composed message if this option is set.
#
#mix_entry_format
#        Type: string
#        Default: “%4n %c %-16s %a”
#
#        This variable describes the format of a remailer line on
#        the  mixmaster  chain  selection  screen.  The following
#        printf(3)-like sequences are supported:
#        %n     The running number on the menu.
#        %c     Remailer capabilities.
#        %s     The remailer's short name.
#        %a     The remailer's e-mail address.
#
set mixmaster="mixmaster-filter"
#        Type: path
#        Default: “mixmaster”
#
#        This variable contains the path to the Mixmaster  binary
#        on your system.  It is used with various sets of parame‐
#        ters to gather the  list  of  known  remailers,  and  to
#        finally send a message through the mixmaster chain.
#
#        Note:  On  Debian systems, this option is set by default
#        to “mixmaster-filter” in /etc/Muttrc.
#
set move=no
#        Type: quadoption
#        Default: no
#
#        Controls whether or not Mutt  will  move  read  messages
#        from  your  spool mailbox to your $mbox mailbox, or as a
#        result of a “mbox-hook” command.
set narrow_tree=yes
#        Type: boolean
#        Default: no
#
#        This variable, when set, makes the thread tree narrower,
#        allowing deeper threads to fit on the screen.
#
set net_inc=5
#        Type: number
#        Default: 10
#
#        Operations  that  expect  to  transfer a large amount of
#        data over the network will update their  progress  every
#        $net_inc  kilobytes.   If set to 0, no progress messages
#        will be displayed.
#
#        See also $read_inc, $write_inc and $net_inc.
#
#pager
#        Type: path
#        Default: “builtin”
#
#        This variable specifies which pager you  would  like  to
#        use  to  view messages. The value “builtin” means to use
#        the built-in pager, otherwise this variable should spec‐
#        ify the pathname of the external pager you would like to
#        use.
#
#        Using an external pager  may  have  some  disadvantages:
#        Additional  keystrokes  are  necessary because you can't
#        call mutt functions directly from the pager, and  screen
#        resizes  cause  lines longer than the screen width to be
#        badly formatted in the help menu.
#
set pager_context=1
#        Type: number
#        Default: 0
#
#        This variable controls the number of  lines  of  context
#        that are given when displaying the next or previous page
#        in the internal pager.  By default,  Mutt  will  display
#        the  line after the last one on the screen at the top of
#        the next page (0 lines of context).
#
#        This variable also specifies the amount of context given
#        for search results. If positive, this many lines will be
#        given  before  a  match,  if  0,  the  match   will   be
#        top-aligned.
#
set pager_format=""
#        Type: string
#        Default: “-%Z- %C/%m: %-20.20n   %s%*  -- (%P)”
#
#        This  variable  controls the format of the one-line mes‐
#        sage “status” displayed before each  message  in  either
#        the  internal or an external pager.  The valid sequences
#        are listed in the $index_format section.
#
set pager_index_lines=11
#        Type: number
#        Default: 0
#
#        Determines the number of lines of a mini-index which  is
#        shown  when  in  the pager.  The current message, unless
#        near the top or bottom of the folder,  will  be  roughly
#        one  third  of  the way down this mini-index, giving the
#        reader the context of a few messages  before  and  after
#        the  message.  This is useful, for example, to determine
#        how many messages remain  to  be  read  in  the  current
#        thread.  One of the lines is reserved for the status bar
#        from the index, so a setting of 6 will only show 5 lines
#        of  the  actual index.  A value of 0 results in no index
#        being shown.  If the number of messages in  the  current
#        folder  is  less than $pager_index_lines, then the index
#        will only use as many lines as it needs.
#
set pager_stop=yes
#        Type: boolean
#        Default: no
#
#        When set, the internal-pager will not move to  the  next
#        message  when you are at the end of a message and invoke
#        the <next-page> function.
#
#pgp_auto_decode
#        Type: boolean
#        Default: no
#
#        If set, mutt will automatically attempt to decrypt  tra‐
#        ditional  PGP  messages  whenever  the  user performs an
#        operation which ordinarily would result in the  contents
#        of  the  message being operated on.  For example, if the
#        user displays a pgp-traditional message  which  has  not
#        been  manually  checked with the <check-traditional-pgp>
#        function, mutt will automatically check the message  for
#        traditional pgp.
#
#pgp_autoinline
#        Type: boolean
#        Default: no
#
#        This  option  controls  whether Mutt generates old-style
#        inline (traditional) PGP encrypted  or  signed  messages
#        under  certain circumstances.  This can be overridden by
#        use of the pgp menu, when inline is not required.
#
#        Note that Mutt might automatically use PGP/MIME for mes‐
#        sages  which  consist  of  more than a single MIME part.
#        Mutt can be configured to ask  before  sending  PGP/MIME
#        messages when inline (traditional) would not work.
#
#        Also see the $pgp_mime_auto variable.
#
#        Also note that using the old-style PGP message format is
#        strongly deprecated.  (PGP only)
#
#pgp_check_exit
#        Type: boolean
#        Default: yes
#
#        If set, mutt will check the exit code of the PGP subpro‐
#        cess  when  signing or encrypting.  A non-zero exit code
#        means that the subprocess failed.  (PGP only)
#
#pgp_clearsign_command
#        Type: string
#        Default: “”
#
#        This format is used to create an old-style “clearsigned”
#        PGP  message.   Note  that  the  use  of  this format is
#        strongly deprecated.
#
#        This is a format  string,  see  the  $pgp_decode_command
#        command  for  possible  printf(3)-like  sequences.  (PGP
#        only)
#
#pgp_decode_command=
#        Type: string
#        Default: “”
#
#        This format strings specifies a command which is used to
#        decode application/pgp attachments.
#
#        The   PGP   command   formats  have  their  own  set  of
#        printf(3)-like sequences:
#        %p     Expands to PGPPASSFD=0  when  a  pass  phrase  is
#                needed,  to an empty string otherwise. Note: This
#                may be used with a %? construct.
#        %f     Expands to the name of a file containing  a  mes‐
#                sage.
#        %s     Expands to the name of a file containing the sig‐
#                nature part
#                        of a multipart/signed attachment  when
#                verifying it.
#        %a     The value of $pgp_sign_as.
#        %r     One  or  more  key IDs (or fingerprints if avail‐
#                able).
#
#        For examples on how to configure these formats  for  the
#        various  versions  of PGP which are floating around, see
#        the pgp and gpg sample configuration files in  the  sam‐
#        ples/ subdirectory which has been installed on your sys‐
#        tem alongside the documentation.  (PGP only)
#
#pgp_decrypt_command
#        Type: string
#        Default: “”
#
#        This command is used to decrypt a PGP encrypted message.
#
#        This is a format  string,  see  the  $pgp_decode_command
#        command  for  possible  printf(3)-like  sequences.  (PGP
#        only)
#
#pgp_encrypt_only_command
#        Type: string
#        Default: “”
#
#        This command is used to  encrypt  a  body  part  without
#        signing it.
#
#        This  is  a  format  string, see the $pgp_decode_command
#        command for  possible  printf(3)-like  sequences.   (PGP
#        only)
#
#pgp_encrypt_sign_command
#        Type: string
#        Default: “”
#
#        This  command  is  used  to both sign and encrypt a body
#        part.
#
#        This is a format  string,  see  the  $pgp_decode_command
#        command  for  possible  printf(3)-like  sequences.  (PGP
#        only)
#
#pgp_entry_format
#        Type: string
#        Default: “%4n %t%f %4l/0x%k %-4a %2c %u”
#
#        This variable allows you to customize the PGP key selec‐
#        tion menu to your personal taste. This string is similar
#        to $index_format, but has its own set of  printf(3)-like
#        sequences:
#        %n     number
#        %k     key id
#        %u     user id
#        %a     algorithm
#        %l     key length
#        %f     flags
#        %c     capabilities
#        %t     trust/validity of the key-uid association
#        %[<s>] date  of  the  key  where  <s>  is an strftime(3)
#                expression
#
#        (PGP only)
#
#pgp_export_command
#        Type: string
#        Default: “”
#
#        This command is used to export a  public  key  from  the
#        user's key ring.
#
#        This  is  a  format  string, see the $pgp_decode_command
#        command for  possible  printf(3)-like  sequences.   (PGP
#        only)
#
#pgp_getkeys_command
#        Type: string
#        Default: “”
#
#        This command is invoked whenever Mutt needs to fetch the
#        public key associated with an  email  address.   Of  the
#        sequences  supported  by  $pgp_decode_command, %r is the
#        only printf(3)-like  sequence  used  with  this  format.
#        Note that in this case, %r expands to the email address,
#        not the public key ID (the key ID is unknown,  which  is
#        why Mutt is invoking this command).  (PGP only)
#
#pgp_good_sign
#        Type: regular expression
#        Default: “”
#
#        If you assign a text to this variable, then a PGP signa‐
#        ture is only considered  verified  if  the  output  from
#        $pgp_verify_command contains the text. Use this variable
#        if the exit code from the command is 0 even for bad sig‐
#        natures.  (PGP only)
#
#pgp_ignore_subkeys
#        Type: boolean
#        Default: yes
#
#        Setting  this variable will cause Mutt to ignore OpenPGP
#        subkeys. Instead, the principal  key  will  inherit  the
#        subkeys'  capabilities.   Unset this if you want to play
#        interesting key selection games.  (PGP only)
#
#pgp_import_command
#        Type: string
#        Default: “”
#
#        This command is used to import a key from a message into
#        the user's public key ring.
#
#        This  is  a  format  string, see the $pgp_decode_command
#        command for  possible  printf(3)-like  sequences.   (PGP
#        only)
#
#pgp_list_pubring_command
#        Type: string
#        Default: “”
#
#        This  command is used to list the public key ring's con‐
#        tents.  The output format must be analogous to  the  one
#        used by
#
#        gpg --list-keys --with-colons --with-fingerprint
#
#        This  format  is  also  generated by the pgpring utility
#        which comes with mutt.
#
#        Note: gpg's fixed-list-mode option should not  be  used.
#        It  produces a different date format which may result in
#        mutt showing incorrect key generation dates.
#
#        This is a format  string,  see  the  $pgp_decode_command
#        command  for  possible  printf(3)-like  sequences.  (PGP
#        only)
#
#pgp_list_secring_command
#        Type: string
#        Default: “”
#
#        This command is used to list the secret key ring's  con‐
#        tents.   The  output format must be analogous to the one
#        used by:
#
#        gpg --list-keys --with-colons --with-fingerprint
#
#        This format is also generated  by  the  pgpring  utility
#        which comes with mutt.
#
#        Note:  gpg's  fixed-list-mode option should not be used.
#        It produces a different date format which may result  in
#        mutt showing incorrect key generation dates.
#
#        This  is  a  format  string, see the $pgp_decode_command
#        command for  possible  printf(3)-like  sequences.   (PGP
#        only)
#
#pgp_long_ids
#        Type: boolean
#        Default: yes
#
#        If  set, use 64 bit PGP key IDs, if unset use the normal
#        32 bit key IDs.  NOTE: Internally, Mutt has transitioned
#        to  using  fingerprints (or long key IDs as a fallback).
#        This option now only controls the display of key IDs  in
#        the  key  selection  menu  and a few other places.  (PGP
#        only)
#
#pgp_mime_auto
#        Type: quadoption
#        Default: ask-yes
#
#        This option controls whether Mutt will  prompt  you  for
#        automatically sending a (signed/encrypted) message using
#        PGP/MIME when inline (traditional) fails (for  any  rea‐
#        son).
#
#        Also note that using the old-style PGP message format is
#        strongly deprecated.  (PGP only)
#
#pgp_replyinline
#        Type: boolean
#        Default: no
#
#        Setting this variable will cause Mutt to always  attempt
#        to  create an inline (traditional) message when replying
#        to a message which is PGP encrypted/signed inline.  This
#        can be overridden by use of the pgp menu, when inline is
#        not required.  This option does not automatically detect
#        if the (replied-to) message is inline; instead it relies
#        on Mutt internals for  previously  checked/flagged  mes‐
#        sages.
#
#        Note that Mutt might automatically use PGP/MIME for mes‐
#        sages which consist of more than  a  single  MIME  part.
#        Mutt  can  be  configured to ask before sending PGP/MIME
#        messages when inline (traditional) would not work.
#
#        Also see the $pgp_mime_auto variable.
#
#        Also note that using the old-style PGP message format is
#        strongly deprecated.  (PGP only)
#
#pgp_retainable_sigs
#        Type: boolean
#        Default: no
#
#        If  set,  signed  and encrypted messages will consist of
#        nested  multipart/signed  and  multipart/encrypted  body
#        parts.
#
#        This  is  useful  for  applications  like  encrypted and
#        signed mailing lists,  where  the  outer  layer  (multi‐
#        part/encrypted)  can  be easily removed, while the inner
#        multipart/signed part is retained.  (PGP only)
#
#pgp_show_unusable
#        Type: boolean
#        Default: yes
#
#        If set, mutt will display non-usable keys on the PGP key
#        selection  menu.   This  includes  keys  which have been
#        revoked, have expired, or have been marked as “disabled”
#        by the user.  (PGP only)
#
#pgp_sign_command
#        Type: string
#        Default: “”
#
#        This command is used to create the detached  PGP  signa‐
#        ture for a multipart/signed PGP/MIME body part.
#
#        This  is  a  format  string, see the $pgp_decode_command
#        command for  possible  printf(3)-like  sequences.   (PGP
#        only)
#
#pgp_sort_keys
#        Type: sort order
#        Default: address
#
#        Specifies  how  the  entries in the pgp menu are sorted.
#        The following are legal values:
#        address
#                sort alphabetically by user id
#        keyid  sort alphabetically by key id
#        date   sort by key creation date
#        trust  sort by the trust of the key
#
#        If you prefer reverse order of the above values,  prefix
#        it with “reverse-”.  (PGP only)
#
#pgp_strict_enc
#        Type: boolean
#        Default: yes
#
#        If  set,  Mutt will automatically encode PGP/MIME signed
#        messages as quoted-printable.  Please note  that  unset‐
#        ting  this  variable may lead to problems with non-veri‐
#        fyable PGP signatures, so only change this if  you  know
#        what you are doing.  (PGP only)
#
set pgp_timeout=120
#        Type: number
#        Default: 300
#
#        The  number  of  seconds after which a cached passphrase
#        will expire if not used.  (PGP only)
#
#pgp_use_gpg_agent
#        Type: boolean
#        Default: no
#
#        If set, mutt will use  a  possibly-running  gpg-agent(1)
#        process.   Note  that as of version 2.1, GnuPG no longer
#        exports GPG_AGENT_INFO, so mutt no  longer  verifies  if
#        the agent is running.  (PGP only)
#
#pgp_verify_command
#        Type: string
#        Default: “”
#
#        This command is used to verify PGP signatures.
#
#        This  is  a  format  string, see the $pgp_decode_command
#        command for  possible  printf(3)-like  sequences.   (PGP
#        only)
#
#pgp_verify_key_command
#        Type: string
#        Default: “”
#
#        This  command is used to verify key information from the
#        key selection menu.
#
#        This is a format  string,  see  the  $pgp_decode_command
#        command  for  possible  printf(3)-like  sequences.  (PGP
#        only)
#
set pipe_decode=yes
#        Type: boolean
#        Default: no
#
#        Used in  connection  with  the  <pipe-message>  command.
#        When unset, Mutt will pipe the messages without any pre‐
#        processing. When set, Mutt will weed  headers  and  will
#        attempt to decode the messages first.
#
#pipe_sep
#        Type: string
#        Default: “\n”
#
#        The separator to add between messages when piping a list
#        of tagged messages to an external Unix command.
#
#pipe_split
#        Type: boolean
#        Default: no
#
#        Used in connection with the <pipe-message> function fol‐
#        lowing  <tag-prefix>.   If  this variable is unset, when
#        piping a list of tagged messages Mutt  will  concatenate
#        the  messages and will pipe them all concatenated.  When
#        set, Mutt will pipe the messages one by  one.   In  both
#        cases  the  messages  are  piped  in  the current sorted
#        order, and the $pipe_sep separator is added  after  each
#        message.
#
#pop_auth_try_all
#        Type: boolean
#        Default: yes
#
#        If set, Mutt will try all available authentication meth‐
#        ods.  When unset, Mutt will  only  fall  back  to  other
#        authentication  methods  if  the  previous  methods  are
#        unavailable. If a method is available but authentication
#        fails, Mutt will not connect to the POP server.
#
#pop_authenticators
#        Type: string
#        Default: “”
#
#        This is a colon-delimited list of authentication methods
#        mutt may attempt to use to log in to an POP  server,  in
#        the  order mutt should try them.  Authentication methods
#        are either “user”, “apop” or any  SASL  mechanism,  e.g.
#        “digest-md5”,  “gssapi”  or  “cram-md5”.  This option is
#        case-insensitive. If this option is unset (the  default)
#        mutt  will  try  all  available  methods,  in order from
#        most-secure to least-secure.
#
#        Example:
#
#        set pop_authenticators=”digest-md5:apop:user”
#
#pop_checkinterval
#        Type: number
#        Default: 60
#
#        This variable configures how  often  (in  seconds)  mutt
#        should look for new mail in the currently selected mail‐
#        box if it is a POP mailbox.
#
set pop_delete=yes
#        Type: quadoption
#        Default: ask-no
#
#        If set, Mutt will delete  successfully  downloaded  mes‐
#        sages  from  the  POP server when using the <fetch-mail>
#        function.  When unset, Mutt will download  messages  but
#        also leave them on the POP server.
#
#pop_host
#        Type: string
#        Default: “”
#
#        The  name  of your POP server for the <fetch-mail> func‐
#        tion.  You can also specify an alternative  port,  user‐
#        name and password, i.e.:
#
#        [pop[s]://][username[:password]@]popserver[:port]
#
#        where “[...]” denotes an optional part.
#
#pop_last
#        Type: boolean
#        Default: no
#
#        If this variable is set, mutt will try to use the “LAST”
#        POP command for retrieving only unread messages from the
#        POP server when using the <fetch-mail> function.
#
#pop_pass
#        Type: string
#        Default: “”
#
#        Specifies  the password for your POP account.  If unset,
#        Mutt will prompt you for your password when you  open  a
#        POP mailbox.
#
#        Warning: you should only use this option when you are on
#        a fairly secure machine, because the superuser can  read
#        your  muttrc  even  if you are the only one who can read
#        the file.
#
#pop_reconnect
#        Type: quadoption
#        Default: ask-yes
#
#        Controls whether or not Mutt will try  to  reconnect  to
#        the POP server if the connection is lost.
#
#pop_user
#        Type: string
#        Default: “”
#
#        Your login name on the POP server.
#
#        This  variable  defaults  to your user name on the local
#        machine.
#
#post_indent_string
#        Type: string
#        Default: “”
#
#        Similar to the $attribution variable, Mutt  will  append
#        this  string  after  the inclusion of a message which is
#        being replied to.
#
set postpone=yes
#        Type: quadoption
#        Default: ask-yes
#
#        Controls whether or not messages are saved in the $post‐
#        poned mailbox when you elect not to send immediately.
#
#        Also see the $recall variable.
#
#postpone_encrypt
#        Type: boolean
#        Default: no
#
#        When set, postponed messages that are marked for encryp‐
#        tion   will   be  encrypted  using  the  key  in  $post‐
#        pone_encrypt_as before saving.  (Crypto only)
#
#postpone_encrypt_as
#        Type: string
#        Default: “”
#
#        This is the key used to encrypt postponed messages.   It
#        should  be in keyid or fingerprint form (e.g. 0x00112233
#        for PGP or the hash-value  that  OpenSSL  generates  for
#        S/MIME).  (Crypto only)
#
#preconnect
#        Type: string
#        Default: “”
#
#        If  set, a shell command to be executed if mutt fails to
#        establish a connection to the server. This is useful for
#        setting  up secure connections, e.g. with ssh(1). If the
#        command returns a  nonzero status, mutt gives up opening
#        the server. Example:
#
#        set preconnect=”ssh -f -q -L 1234:mailhost.net:143 mailhost.net \
#        sleep 20 < /dev/null > /dev/null”
#
#        Mailbox  “foo”  on  “mailhost.net” can now be reached as
#        “{localhost:1234}foo”.
#
#        Note: For this example to work, you must be able to  log
#        in to the remote machine without having to enter a pass‐
#        word.
#
#print
#        Type: quadoption
#        Default: ask-no
#
#        Controls whether or not  Mutt  really  prints  messages.
#        This  is set to “ask-no” by default, because some people
#        accidentally hit “p” often.
#
set print_command="/usr/bin/muttprint"
#        Type: path
#        Default: “lpr”
#
#        This specifies the command pipe that should be  used  to
#        print messages.
#
#print_decode
#        Type: boolean
#        Default: yes
#
#        Used in connection with the <print-message> command.  If
#        this option is set, the message is decoded before it  is
#        passed  to the external command specified by $print_com‐
#        mand.  If this option is unset, no  processing  will  be
#        applied  to  the  message  when printing it.  The latter
#        setting may be useful if you  are  using  some  advanced
#        printer  filter  which is able to properly format e-mail
#        messages for printing.
#
#print_split
#        Type: boolean
#        Default: no
#
#        Used in connection with the <print-message> command.  If
#        this option is set, the command specified by $print_com‐
#        mand is executed once for each message which  is  to  be
#        printed.  If this option is unset, the command specified
#        by $print_command is executed only  once,  and  all  the
#        messages  are concatenated, with a form feed as the mes‐
#        sage separator.
#
#        Those who use the  enscript(1)  program's  mail-printing
#        mode will most likely want to set this option.
#
#prompt_after
#        Type: boolean
#        Default: yes
#
#        If  you  use  an  external $pager, setting this variable
#        will cause Mutt to prompt you for  a  command  when  the
#        pager exits rather than returning to the index menu.  If
#        unset, Mutt will return  to  the  index  menu  when  the
#        external pager exits.
#
set query_command="abook --mutt-query '%s'"
#        Type: path
#        Default: “”
#
#        This  specifies the command Mutt will use to make exter‐
#        nal address queries.  The string  may  contain  a  “%s”,
#        which will be substituted with the query string the user
#        types.  Mutt will add quotes around the  string  substi‐
#        tuted  for “%s” automatically according to shell quoting
#        rules, so you should avoid adding your own.  If no  “%s”
#        is  found  in  the  string,  Mutt will append the user's
#        query to the end of the string.  See  “query”  for  more
#        information.
#
#query_format
#        Type: string
#        Default: “%4c %t %-25.25a %-25.25n %?e?(%e)?”
#
#        This  variable describes the format of the “query” menu.
#        The following printf(3)-style sequences are understood:
#        %a     destination address
#        %c     current entry number
#        %e     extra information *
#        %n     destination name
#        %t     “*” if current entry is tagged, a space otherwise
#        %>X    right justify the rest of the string and pad with
#                “X”
#        %|X    pad to the end of the line with “X”
#        %*X    soft-fill with character “X” as pad
#
#        For an explanation of “soft-fill”, see the $index_format
#        documentation.
#
#        * = can be optionally printed if nonzero, see the  $sta‐
#        tus_format documentation.
#
#quit
#        Type: quadoption
#        Default: yes
#
#        This  variable  controls whether “quit” and “exit” actu‐
#        ally quit from mutt.  If this option  is  set,  they  do
#        quit,  if it is unset, they have no effect, and if it is
#        set to ask-yes or ask-no, you are prompted for confirma‐
#        tion when you try to quit.
#
set quote_regexp="^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"
#        Type: regular expression
#        Default: “^([ \t]*[|>:}#])+”
#
#        A  regular  expression  used  in  the  internal pager to
#        determine quoted sections of text in the body of a  mes‐
#        sage.  Quoted  text  may be filtered out using the <tog‐
#        gle-quoted> command, or colored according to the  “color
#        quoted” family of directives.
#
#        Higher  levels  of  quoting  may  be colored differently
#        (“color quoted1”, “color quoted2”,  etc.).  The  quoting
#        level  is determined by removing the last character from
#        the matched text and recursively reapplying the  regular
#        expression until it fails to produce a match.
#
#        Match  detection may be overridden by the $smileys regu‐
#        lar expression.
#
#read_inc
#        Type: number
#        Default: 10
#
#        If set to a value greater  than  0,  Mutt  will  display
#        which  message it is currently on when reading a mailbox
#        or when performing search actions  such  as  search  and
#        limit.  The  message is printed after this many messages
#        have been read or searched (e.g., if  set  to  25,  Mutt
#        will  print a message when it is at message 25, and then
#        again when it gets to message  50).   This  variable  is
#        meant  to  indicate  progress  when reading or searching
#        large mailboxes which may take some time.  When  set  to
#        0,  only a single message will appear before the reading
#        the mailbox.
#
#        Also see the $write_inc, $net_inc  and  $time_inc  vari‐
#        ables and the “tuning” section of the manual for perfor‐
#        mance considerations.
#
#read_only
#        Type: boolean
#        Default: no
#
#        If set, all folders are opened in read-only mode.
#
#recall
#        Type: quadoption
#        Default: ask-yes
#
#        Controls  whether or not Mutt recalls postponed messages
#        when composing a new message.
#
#        Setting this variable to is not  generally  useful,  and
#        thus not recommended.
#
#        Also see $postponed variable.
#
#reflow_text
#        Type: boolean
#        Default: yes
#
#        When set, Mutt will reformat  paragraphs  in  text/plain
#        parts marked format=flowed.  If unset, Mutt will display
#        paragraphs unaltered from how they appear in the message
#        body.  See RFC3676 for details on the format=flowed for‐
#        mat.
#
#        Also see $reflow_wrap, and $wrap.
#
set reflow_wrap=80
#        Type: number
#        Default: 78
#
#        This variable controls the maximum paragraph width  when
#        reformatting  text/plain parts when $reflow_text is set.
#        When the value is 0, paragraphs will be wrapped  at  the
#        terminal's  right  margin.   A  positive  value sets the
#        paragraph width relative to the left margin.  A negative
#        value set the paragraph width relative to the right mar‐
#        gin.
#
#        Also see $wrap.
#
#reply_regexp
#        Type: regular expression
#        Default: “^(re([\[0-9\]+])*|aw):[ \t]*”
#
#        A regular expression used to  recognize  reply  messages
#        when  threading  and  replying. The default value corre‐
#        sponds to the English ”Re:” and the German ”Aw:”.
#
#reply_self
#        Type: boolean
#        Default: no
#
#        If unset and you are replying to a message sent by  you,
#        Mutt  will  assume that you want to reply to the recipi‐
#        ents of that message rather than to yourself.
#
#        Also see the “alternates” command.
#
set reply_to=yes
#        Type: quadoption
#        Default: ask-yes
#
#        If set, when replying to a message, Mutt  will  use  the
#        address  listed in the Reply-to: header as the recipient
#        of the reply.  If unset, it will use the address in  the
#        From:  header  field instead.  This option is useful for
#        reading a mailing list that sets  the  Reply-To:  header
#        field to the list address and you want to send a private
#        message to the author of a message.
#
#resolve
#        Type: boolean
#        Default: yes
#
#        When set, the cursor will be automatically  advanced  to
#        the next (possibly undeleted) message whenever a command
#        that modifies the current message is executed.
#
set reverse_alias=yes
#        Type: boolean
#        Default: no
#
#        This variable controls whether or not Mutt will  display
#        the  “personal” name from your aliases in the index menu
#        if it finds an alias that matches the message's  sender.
#        For example, if you have the following alias:
#
#        alias juser abd30425@somewhere.net (Joe User)
#
#        and  then  you receive mail which contains the following
#        header:
#
#        From: abd30425@somewhere.net
#
#        It would be displayed in the index menu  as  “Joe  User”
#        instead  of  “abd30425@somewhere.net.”   This  is useful
#        when the person's e-mail address is not human friendly.
#
set reverse_name=yes
#        Type: boolean
#        Default: no
#
#        It may sometimes arrive that you receive mail to a  cer‐
#        tain  machine, move the messages to another machine, and
#        reply to some the messages from there.  If this variable
#        is  set, the default From: line of the reply messages is
#        built using the address where you received the  messages
#        you are replying to if that address matches your “alter‐
#        nates”.  If the variable is unset, or the  address  that
#        would be used doesn't match your “alternates”, the From:
#        line will use your address on the current machine.
#
#        Also see the “alternates” command.
#
#reverse_realname
#        Type: boolean
#        Default: yes
#
#        This   variable   fine-tunes   the   behavior   of   the
#        $reverse_name  feature.   When  it is set, mutt will use
#        the  address  from  incoming  messages  as-is,  possibly
#        including  eventual  real names.  When it is unset, mutt
#        will override any such real names with  the  setting  of
#        the $realname variable.
#
#rfc2047_parameters
#        Type: boolean
#        Default: no
#
#        When   this   variable   is   set,   Mutt   will  decode
#        RFC2047-encoded MIME parameters. You want  to  set  this
#        variable  when  mutt suggests you to save attachments to
#        files named like:
#
#        =?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=
#
#        When this variable  is  set  interactively,  the  change
#        won't be active until you change folders.
#
#        Note  that  this use of RFC2047's encoding is explicitly
#        prohibited by the standard, but nevertheless encountered
#        in the wild.
#
#        Also  note that setting this parameter will not have the
#        effect  that  mutt  generates  this  kind  of  encoding.
#        Instead,  mutt  will  unconditionally  use  the encoding
#        specified in RFC2231.
#
#save_address
#        Type: boolean
#        Default: no
#
#        If set, mutt will take the sender's  full  address  when
#        choosing   a  default  folder  for  saving  a  mail.  If
#        $save_name or $force_name is set too, the  selection  of
#        the Fcc folder will be changed as well.
#
#save_empty
#        Type: boolean
#        Default: yes
#
#        When  unset,  mailboxes  which contain no saved messages
#        will be removed when closed (the exception is $spoolfile
#        which  is  never  removed).  If set, mailboxes are never
#        removed.
#
#        Note: This only applies to mbox and MMDF  folders,  Mutt
#        does not delete MH and Maildir directories.
#
set save_history=20
#        Type: number
#        Default: 0
#
#        This variable controls the size of the history (per cat‐
#        egory) saved in the $history_file file.
#
#save_name
#        Type: boolean
#        Default: no
#
#        This variable controls how copies of  outgoing  messages
#        are  saved.  When set, a check is made to see if a mail‐
#        box specified by the recipient address exists  (this  is
#        done by searching for a mailbox in the $folder directory
#        with the username part of the  recipient  address).   If
#        the  mailbox  exists, the outgoing message will be saved
#        to that mailbox, otherwise the message is saved  to  the
#        $record mailbox.
#
#        Also see the $force_name variable.
#
#score
#        Type: boolean
#        Default: yes
#
#        When  this  variable  is  unset,  scoring is turned off.
#        This can be useful to selectively  disable  scoring  for
#        certain  folders  when the $score_threshold_delete vari‐
#        able and related are used.
#
#score_threshold_delete
#        Type: number
#        Default: -1
#
#        Messages which have been assigned a score  equal  to  or
#        lower  than the value of this variable are automatically
#        marked for deletion by  mutt.   Since  mutt  scores  are
#        always  greater  than or equal to zero, the default set‐
#        ting of this variable will  never  mark  a  message  for
#        deletion.
#
#score_threshold_flag
#        Type: number
#        Default: 9999
#
#        Messages  which  have been assigned a score greater than
#        or equal to  this  variable's  value  are  automatically
#        marked ”flagged”.
#
#score_threshold_read
#        Type: number
#        Default: -1
#
#        Messages  which  have  been assigned a score equal to or
#        lower than the value of this variable are  automatically
#        marked  as  read  by mutt.  Since mutt scores are always
#        greater than or equal to zero, the  default  setting  of
#        this variable will never mark a message read.
#
set search_context=1
#        Type: number
#        Default: 0
#
#        For  the  pager,  this  variable specifies the number of
#        lines shown before search results.  By  default,  search
#        results will be top-aligned.
#
set send_charset="us-ascii:utf-8"
#        Type: string
#        Default: “us-ascii:iso-8859-1:utf-8”
#
#        A  colon-delimited  list  of character sets for outgoing
#        messages. Mutt will use the  first  character  set  into
#        which  the  text  can  be  converted  exactly.   If your
#        $charset is not  “iso-8859-1”  and  recipients  may  not
#        understand  “UTF-8”,  it  is advisable to include in the
#        list an appropriate widely used standard  character  set
#        (such as “iso-8859-2”, “koi8-r” or “iso-2022-jp”) either
#        instead of or after “iso-8859-1”.
#
#        In case the text cannot be converted into one  of  these
#        exactly, mutt uses $charset as a fallback.
#
set sendmail="~/bin/msmtpqw"
#        Type: path
#        Default: “/usr/sbin/sendmail -oem -oi”
#
#        Specifies the program and arguments used to deliver mail
#        sent by Mutt.  Mutt expects that the  specified  program
#        interprets additional arguments as recipient addresses.
#
set sendmail_wait=-1
#        Type: number
#        Default: 0
#
#        Specifies  the  number of seconds to wait for the $send‐
#        mail process to finish  before  giving  up  and  putting
#        delivery in the background.
#
#        Mutt interprets the value of this variable as follows:
#        >0     number  of seconds to wait for sendmail to finish
#                before continuing
#        0      wait forever for sendmail to finish
#        <0     always put sendmail  in  the  background  without
#                waiting
#
#        Note  that if you specify a value other than 0, the out‐
#        put of the child process will  be  put  in  a  temporary
#        file.   If  there is some error, you will be informed as
#        to where to find the output.
#
#shell
#        Type: path
#        Default: “”
#
#        Command to use when spawning a  subshell.   By  default,
#        the user's login shell from /etc/passwd is used.
#
#sig_dashes
#        Type: boolean
#        Default: yes
#
#        If  set,  a  line  containing  “--  ” (note the trailing
#        space) will be inserted before your $signature.   It  is
#        strongly  recommended  that  you not unset this variable
#        unless your signature contains just your name.  The rea‐
#        son  for  this is because many software packages use “--
#        \n” to detect your signature.  For example, Mutt has the
#        ability  to highlight the signature in a different color
#        in the built-in pager.
#
#sig_on_top
#        Type: boolean
#        Default: no
#
#        If set, the signature will be included before any quoted
#        or  forwarded text.  It is strongly recommended that you
#        do not set this variable unless you really know what you
#        are doing, and are prepared to take some heat from neti‐
#        quette guardians.
#
#simple_search
#        Type: string
#        Default: “~f %s | ~s %s”
#
#        Specifies how Mutt should expand a simple search into  a
#        real  search  pattern.  A simple search is one that does
#        not contain any of the “~” pattern operators.  See “pat‐
#        terns” for more information on search patterns.
#
#        For  example,  if  you  simply type “joe” at a search or
#        limit prompt, Mutt will automatically expand it  to  the
#        value  specified by this variable by replacing “%s” with
#        the supplied string.  For the default value, “joe” would
#        be expanded to: “~f joe | ~s joe”.
#
set sleep_time=0
#        Type: number
#        Default: 1
#
#        Specifies  time,  in  seconds, to pause while displaying
#        certain informational messages, while moving from folder
#        to  folder and after expunging messages from the current
#        folder.  The default is to pause one second, so a  value
#        of zero for this option suppresses the pause.
#
#smart_wrap
#        Type: boolean
#        Default: yes
#
#        Controls  the  display  of  lines longer than the screen
#        width in the internal pager.  If  set,  long  lines  are
#        wrapped  at a word boundary.  If unset, lines are simply
#        wrapped at the screen edge. Also see the $markers  vari‐
#        able.
#
#smileys
#        Type: regular expression
#        Default: “(>From )|(:[-^]?[][)(><}{|/DP])”
#
#        The  pager uses this variable to catch some common false
#        positives of $quote_regexp, most notably smileys and not
#        consider a line quoted text if it also matches $smileys.
#        This mostly happens at the beginning of a line.
#
#smime_ask_cert_label
#        Type: boolean
#        Default: yes
#
#        This flag controls whether you want to be asked to enter
#        a label for a certificate about to be added to the data‐
#        base or not. It is set by default.  (S/MIME only)
#
#smime_ca_location
#        Type: path
#        Default: “”
#
#        This variable contains the name of either  a  directory,
#        or  a  file  which contains trusted certificates for use
#        with OpenSSL.  (S/MIME only)
#
#        Note: On Debian systems,  this  defaults  to  the  first
#        existing  file  in  the following list: ~/.smime/ca-cer‐
#        tificates.crt                     ~/.smime/ca-bundle.crt
#        /etc/ssl/certs/ca-certificates.crt.
#
#smime_certificates
#        Type: path
#        Default: “”
#
#        Since  for  S/MIME  there  is no pubring/secring as with
#        PGP, mutt has to handle storage and retrieval of keys by
#        itself.  This is very basic right now, and keys and cer‐
#        tificates are stored in two different directories,  both
#        named as the hash-value retrieved from OpenSSL. There is
#        an  index  file  which  contains  mailbox-address  keyid
#        pairs,  and  which  can  be manually edited. This option
#        points to the location  of  the  certificates.   (S/MIME
#        only)
#
#smime_decrypt_command
#        Type: string
#        Default: “”
#
#        This  format string specifies a command which is used to
#        decrypt application/x-pkcs7-mime attachments.
#
#        The OpenSSL  command  formats  have  their  own  set  of
#        printf(3)-like sequences similar to PGP's:
#        %f     Expands  to  the name of a file containing a mes‐
#                sage.
#        %s     Expands to the name of a file containing the sig‐
#                nature part
#                        of  a multipart/signed attachment when
#                verifying it.
#        %k     The key-pair specified with $smime_default_key
#        %c     One or more certificate IDs.
#        %a     The algorithm used for encryption.
#        %C     CA    location:      Depending     on     whether
#                $smime_ca_location
#                        points  to  a  directory or file, this
#                expands to
#                        “-CApath    $smime_ca_location”     or
#                “-CAfile $smime_ca_location”.
#
#        For  examples on how to configure these formats, see the
#        smime.rc in the samples/  subdirectory  which  has  been
#        installed  on  your  system alongside the documentation.
#        (S/MIME only)
#
#smime_decrypt_use_default_key
#        Type: boolean
#        Default: yes
#
#        If set (default) this tells mutt to use the default  key
#        for decryption. Otherwise, if managing multiple certifi‐
#        cate-key-pairs, mutt will try to use the mailbox-address
#        to determine the key to use. It will ask you to supply a
#        key, if it can't find one.  (S/MIME only)
#
#smime_default_key
#        Type: string
#        Default: “”
#
#        This is the default key-pair to use  for  signing.  This
#        must  be  set  to the keyid (the hash-value that OpenSSL
#        generates) to work properly (S/MIME only)
#
#smime_encrypt_command
#        Type: string
#        Default: “”
#
#        This command is used to  create  encrypted  S/MIME  mes‐
#        sages.
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_encrypt_with
#        Type: string
#        Default: “aes256”
#
#        This  sets the algorithm that should be used for encryp‐
#        tion.  Valid choices are “aes128”,  “aes192”,  “aes256”,
#        “des”,  “des3”,  “rc2-40”, “rc2-64”, “rc2-128”.  (S/MIME
#        only)
#
#smime_get_cert_command
#        Type: string
#        Default: “”
#
#        This command is used to extract X509 certificates from a
#        PKCS7 structure.
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_get_cert_email_command
#        Type: string
#        Default: “”
#
#        This  command  is  used  to extract the mail address(es)
#        used for storing X509 certificates, and for verification
#        purposes  (to  check  whether the certificate was issued
#        for the sender's mailbox).
#
#        This is a format string, see the  $smime_decrypt_command
#        command  for possible printf(3)-like sequences.  (S/MIME
#        only)
#
#smime_get_signer_cert_command
#        Type: string
#        Default: “”
#
#        This command is used to extract only  the  signers  X509
#        certificate  from  a  S/MIME signature, so that the cer‐
#        tificate's owner may get compared to the email's “From:”
#        field.
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_import_cert_command
#        Type: string
#        Default: “”
#
#        This  command  is  used  to  import  a  certificate  via
#        smime_keys.
#
#        This is a format string, see the  $smime_decrypt_command
#        command  for possible printf(3)-like sequences.  (S/MIME
#        only)
#
#smime_is_default
#        Type: boolean
#        Default: no
#
#        The default behavior of  mutt  is  to  use  PGP  on  all
#        auto-sign/encryption  operations. To override and to use
#        OpenSSL instead this must be set.  However, this has  no
#        effect  while  replying,  since  mutt will automatically
#        select  the  same   application   that   was   used   to
#        sign/encrypt  the  original  message.   (Note  that this
#        variable    can    be    overridden     by     unsetting
#        $crypt_autosmime.)  (S/MIME only)
#
#smime_keys
#        Type: path
#        Default: “”
#
#        Since  for  S/MIME  there  is no pubring/secring as with
#        PGP,  mutt  has  to  handle  storage  and  retrieval  of
#        keys/certs  by itself. This is very basic right now, and
#        stores keys and certificates in two  different  directo‐
#        ries,  both  named  as  the  hash-value  retrieved  from
#        OpenSSL. There is an index  file  which  contains  mail‐
#        box-address  keyid  pair,  and  which  can  be  manually
#        edited. This option points to the location of  the  pri‐
#        vate keys.  (S/MIME only)
#
#smime_pk7out_command
#        Type: string
#        Default: “”
#
#        This  command  is  used  to  extract PKCS7 structures of
#        S/MIME signatures, in order to extract the  public  X509
#        certificate(s).
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_sign_command
#        Type: string
#        Default: “”
#
#        This  command  is  used  to created S/MIME signatures of
#        type multipart/signed, which can be  read  by  all  mail
#        clients.
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_sign_opaque_command
#        Type: string
#        Default: “”
#
#        This  command  is  used  to created S/MIME signatures of
#        type application/x-pkcs7-signature, which  can  only  be
#        handled by mail clients supporting the S/MIME extension.
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_timeout
#        Type: number
#        Default: 300
#
#        The  number  of  seconds after which a cached passphrase
#        will expire if not used.  (S/MIME only)
#
#smime_verify_command
#        Type: string
#        Default: “”
#
#        This command is used to verify S/MIME signatures of type
#        multipart/signed.
#
#        This  is a format string, see the $smime_decrypt_command
#        command for possible printf(3)-like sequences.   (S/MIME
#        only)
#
#smime_verify_opaque_command
#        Type: string
#        Default: “”
#
#        This command is used to verify S/MIME signatures of type
#        application/x-pkcs7-mime.
#
#        This is a format string, see the  $smime_decrypt_command
#        command  for possible printf(3)-like sequences.  (S/MIME
#        only)
#
#smtp_authenticators
#        Type: string
#        Default: “”
#
#        This is a colon-delimited list of authentication methods
#        mutt  may attempt to use to log in to an SMTP server, in
#        the order mutt should try them.  Authentication  methods
#        are  any SASL mechanism, e.g.  “digest-md5”, “gssapi” or
#        “cram-md5”.  This option is case-insensitive. If  it  is
#        “unset”  (the default) mutt will try all available meth‐
#        ods, in order from most-secure to least-secure.
#
#        Example:
#
#        set smtp_authenticators=”digest-md5:cram-md5”
#
#        Note: On Debian systems, this variable defaults  to  the
#        example  mentioned. This file is managed by the “ca-cer‐
#        tificates” package.
#
#smtp_pass
#        Type: string
#        Default: “”
#
#        Specifies the password for your SMTP account.  If unset,
#        Mutt  will  prompt  you for your password when you first
#        send mail via SMTP.  See $smtp_url to configure mutt  to
#        send mail via SMTP.
#
#        Warning: you should only use this option when you are on
#        a fairly secure machine, because the superuser can  read
#        your  muttrc  even  if you are the only one who can read
#        the file.
#
#smtp_url
#        Type: string
#        Default: “”
#
#        Defines the SMTP smarthost where  sent  messages  should
#        relayed  for  delivery.  This should take the form of an
#        SMTP URL, e.g.:
#
#        smtp[s]://[user[:pass]@]host[:port]
#
#        where “[...]” denotes an optional  part.   Setting  this
#        variable overrides the value of the $sendmail variable.
#
set sort=threads
#        Type: sort order
#        Default: date
#
#        Specifies  how  to  sort  messages  in the “index” menu.
#        Valid values are:
#        ‐ date or date-sent
#        ‐ date-received
#        ‐ from
#        ‐ mailbox-order (unsorted)
#        ‐ score
#        ‐ size
#        ‐ spam
#        ‐ subject
#        ‐ threads
#        ‐ to
#
#        You may optionally use the “reverse-” prefix to  specify
#        reverse      sorting      order      (example:      “set
#        sort=reverse-date-sent”).
#
#        Note: On Debian systems, this option is set  by  default
#        to “threads” in /etc/Muttrc.
#
#sort_alias
#        Type: sort order
#        Default: alias
#
#        Specifies  how  the  entries  in  the  “alias”  menu are
#        sorted.  The following are legal values:
#        ‐ address (sort alphabetically by email address)
#        ‐ alias (sort alphabetically by alias name)
#        ‐ unsorted (leave in order specified in .muttrc)
#
set sort_aux=reverse-last-date-received
#        Type: sort order
#        Default: date
#
#        When sorting by  threads,  this  variable  controls  how
#        threads are sorted in relation to other threads, and how
#        the branches of the thread trees are sorted.   This  can
#        be set to any value that $sort can, except “threads” (in
#        that case, mutt will just  use  “date-sent”).   You  can
#        also  specify  the  “last-”  prefix  in  addition to the
#        “reverse-”  prefix,  but   “last-”   must   come   after
#        “reverse-”.   The  “last-”  prefix causes messages to be
#        sorted against  its  siblings  by  which  has  the  last
#        descendant,  using the rest of $sort_aux as an ordering.
#        For instance,
#
#        set sort_aux=last-date-received
#
#        would mean that if  a  new  message  is  received  in  a
#        thread,  that  thread becomes the last one displayed (or
#        the first, if you have “set sort=reverse-threads”.)
#
#        Note: For reversed $sort  order  $sort_aux  is  reversed
#        again  (which  is not the right thing to do, but kept to
#        not break any existing configuration setting).
#
#sort_browser
#        Type: sort order
#        Default: alpha
#
#        Specifies how to sort entries in the file  browser.   By
#        default,  the  entries are sorted alphabetically.  Valid
#        values:
#        ‐ alpha (alphabetically)
#        ‐ date
#        ‐ size
#        ‐ unsorted
#
#        You may optionally use the “reverse-” prefix to  specify
#        reverse      sorting      order      (example:      “set
#        sort_browser=reverse-date”).
#
#sort_re
#        Type: boolean
#        Default: yes
#
#        This variable is only useful  when  sorting  by  threads
#        with  $strict_threads  unset.   In that case, it changes
#        the heuristic mutt uses to thread messages  by  subject.
#        With  $sort_re  set,  mutt will only attach a message as
#        the child of another message by subject if  the  subject
#        of  the  child  message starts with a substring matching
#        the setting of $reply_regexp.  With $sort_re unset, mutt
#        will attach the message whether or not this is the case,
#        as long as the non-$reply_regexp parts of both  messages
#        are identical.
#
#spam_separator
#        Type: string
#        Default: “,”
#
#        This  variable  controls what happens when multiple spam
#        headers are matched: if unset,  each  successive  header
#        will  overwrite  any previous matches value for the spam
#        label. If set, each successive match will append to  the
#        previous, using this variable's value as a separator.
#
set ssl_ca_certificates_file="/etc/ssl/certs/ca-certificates.crt"
#        Type: path
#        Default: “”
#
#        This  variable  specifies  a  file containing trusted CA
#        certificates.  Any server  certificate  that  is  signed
#        with  one of these CA certificates is also automatically
#        accepted.
#
#        Example:
#
#        set ssl_ca_certificates_file=/etc/ssl/certs/ca-certificates.crt
#
#ssl_client_cert
#        Type: path
#        Default: “”
#
#        The file containing a client certificate and its associ‐
#        ated private key.
#
#ssl_force_tls
#        Type: boolean
#        Default: yes
#
#        If this variable is set, Mutt will require that all con‐
#        nections to remote servers be encrypted. Furthermore  it
#        will  attempt  to  negotiate TLS even if the server does
#        not advertise the capability, since it  would  otherwise
#        have  to abort the connection anyway. This option super‐
#        sedes $ssl_starttls.
#
#ssl_min_dh_prime_bits
#        Type: number
#        Default: 0
#
#        This variable specifies  the  minimum  acceptable  prime
#        size  (in  bits)  for  use  in  any  Diffie-Hellman  key
#        exchange. A value of 0 will use  the  default  from  the
#        GNUTLS library.
#
set ssl_starttls=no
#        Type: quadoption
#        Default: yes
#
#        If  set (the default), mutt will attempt to use STARTTLS
#        on servers advertising the capability. When unset,  mutt
#        will  not  attempt  to  use  STARTTLS  regardless of the
#        server's capabilities.
#
#ssl_use_sslv3
#        Type: boolean
#        Default: no
#
#        This variable specifies whether to attempt to use  SSLv3
#        in  the  SSL authentication process. Note that SSLv2 and
#        SSLv3 are now considered fundamentally insecure and  are
#        no longer recommended.
#
#ssl_use_tlsv1
#        Type: boolean
#        Default: yes
#
#        This  variable  specifies  whether  to  attempt  to  use
#        TLSv1.0 in the SSL authentication process.
#
#ssl_use_tlsv1_1
#        Type: boolean
#        Default: yes
#
#        This  variable  specifies  whether  to  attempt  to  use
#        TLSv1.1 in the SSL authentication process.
#
#ssl_use_tlsv1_2
#        Type: boolean
#        Default: yes
#
#        This  variable  specifies  whether  to  attempt  to  use
#        TLSv1.2 in the SSL authentication process.
#
#ssl_verify_dates
#        Type: boolean
#        Default: yes
#
#        If set (the default), mutt will not automatically accept
#        a  server  certificate  that  is either not yet valid or
#        already expired. You should only unset this for particu‐
#        lar known hosts, using the <account-hook> function.
#
#ssl_verify_host
#        Type: boolean
#        Default: yes
#
#        If set (the default), mutt will not automatically accept
#        a server certificate whose host name does not match  the
#        host used in your folder URL. You should only unset this
#        for particular known  hosts,  using  the  <account-hook>
#        function.
#
#ssl_ciphers
#        Type: string
#        Default: “”
#
#        Contains  a  colon-seperated list of ciphers to use when
#        using SSL.  For OpenSSL, see ciphers(1) for  the  syntax
#        of the string.
#
#        For  GnuTLS,  this option will be used in place of ”NOR‐
#        MAL”  at  the  start  of  the  priority   string.    See
#        gnutls_priority_init(3) for the syntax and more details.
#        (Note: GnuTLS version 2.1.7 or higher is required.)
#
#status_chars
#        Type: string
#        Default: “-*%A”
#
#        Controls the characters used by the  “%r”  indicator  in
#        $status_format.  The  first  character  is used when the
#        mailbox is unchanged. The second is used when the  mail‐
#        box has been changed, and it needs to be resynchronized.
#        The third is used if the mailbox is in  read-only  mode,
#        or  if the mailbox will not be written when exiting that
#        mailbox (You can toggle whether to write  changes  to  a
#        mailbox  with  the  <toggle-write>  operation,  bound by
#        default to “%”). The fourth is used to indicate that the
#        current  folder  has been opened in attach- message mode
#        (Certain operations like composing a new mail, replying,
#        forwarding, etc. are not permitted in this mode).
#
set status_format="%f [%r %m msgs]-%>-(%P)"
#        Type: string
#        Default: “-%r-Mutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]---(%s/%S)-%>-(%P)---”
#
#        Controls  the format of the status line displayed in the
#        “index” menu.  This string is similar to  $index_format,
#        but has its own set of printf(3)-like sequences:
#        %b     number of mailboxes with new mail *
#        %d     number of deleted messages *
#        %f     the full pathname of the current mailbox
#        %F     number of flagged messages *
#        %h     local hostname
#        %l     size (in bytes) of the current mailbox *
#        %L     size  (in  bytes)  of  the  messages shown (i.e.,
#                which match the current limit) *
#        %m     the number of messages in the mailbox *
#        %M     the number of messages shown (i.e.,  which  match
#                the current limit) *
#        %n     number of new messages in the mailbox *
#        %o     number of old unread messages *
#        %p     number of postponed messages *
#        %P     percentage of the way through the index
#        %r     modified/read-only/won't-write/attach-message
#                indicator, according to $status_chars
#        %s     current sorting mode ($sort)
#        %S     current aux sorting method ($sort_aux)
#        %t     number of tagged messages *
#        %u     number of unread messages *
#        %v     Mutt version string
#        %V     currently active limit pattern, if any *
#        %>X    right justify the rest of the string and pad with
#                “X”
#        %|X    pad to the end of the line with “X”
#        %*X    soft-fill with character “X” as pad
#
#        For an explanation of “soft-fill”, see the $index_format
#        documentation.
#
#        * = can be optionally printed if nonzero
#
#        Some of the above sequences can be  used  to  optionally
#        print  a string if their value is nonzero.  For example,
#        you may only want to see the number of flagged  messages
#        if  such  messages exist, since zero is not particularly
#        meaningful.  To optionally print a string based upon one
#        of the above sequences, the following construct is used:
#
#        %?<sequence_char>?<optional_string>?
#
#        where sequence_char is a character from the table above,
#        and optional_string is the string you would like printed
#        if  sequence_char  is nonzero.  optional_string may con‐
#        tain other sequences as well as normal text, but you may
#        not nest optional strings.
#
#        Here  is an example illustrating how to optionally print
#        the number of new messages in a mailbox:
#
#        %?n?%n new messages.?
#
#        You can also switch between two strings using  the  fol‐
#        lowing construct:
#
#        %?<sequence_char>?<if_string>&<else_string>?
#
#        If  the  value  of  sequence_char is non-zero, if_string
#        will  be  expanded,  otherwise   else_string   will   be
#        expanded.
#
#        You  can force the result of any printf(3)-like sequence
#        to be lowercase by prefixing the sequence character with
#        an  underscore  (“_”) sign.  For example, if you want to
#        display the local hostname in lowercase, you would  use:
#        “%_h”.
#
#        If  you prefix the sequence character with a colon (“:”)
#        character, mutt will replace any dots in  the  expansion
#        by  underscores. This might be helpful with IMAP folders
#        that don't like dots in folder names.
#
set status_on_top=yes
#        Type: boolean
#        Default: no
#
#        Setting this variable causes the “status bar” to be dis‐
#        played  on the first line of the screen rather than near
#        the bottom. If $help is set, too it'll be placed at  the
#        bottom.
#
set strict_threads=yes
#        Type: boolean
#        Default: no
#
#        If   set,   threading   will   only   make  use  of  the
#        “In-Reply-To” and “References:” fields when you $sort by
#        message  threads.   By  default,  messages with the same
#        subject are grouped together in “pseudo threads.”.  This
#        may not always be desirable, such as in a personal mail‐
#        box where you might have several unrelated messages with
#        the  subjects like “hi” which will get grouped together.
#        See also $sort_re for a less drastic way of  controlling
#        this behavior.
#
# suspend
#        Type: boolean
#        Default: yes
#
#        When  unset,  mutt  won't stop when the user presses the
#        terminal's susp key, usually “^Z”. This is useful if you
#        run  mutt inside an xterm using a command like “xterm -e
#        mutt”.
#
#text_flowed
#        Type: boolean
#        Default: no
#
#        When set, mutt will generate “format=flowed” bodies with
#        a  content  type  of  “text/plain; format=flowed”.  This
#        format is easier to handle for  some  mailing  software,
#        and  generally  just looks like ordinary text.  To actu‐
#        ally make use of this  format's  features,  you'll  need
#        support in your editor.
#
#        Note  that $indent_string is ignored when this option is
#        set.
#
#thorough_search
#        Type: boolean
#        Default: yes
#
#        Affects the ~b and ~h  search  operations  described  in
#        section   “patterns”.    If   set,   the   headers   and
#        body/attachments of messages to be searched are  decoded
#        before  searching.  If  unset,  messages are searched as
#        they appear in the folder.
#
#        Users searching attachments or for non-ASCII  characters
#        should  set  this  value  because decoding also includes
#        MIME parsing/decoding and possible character set conver‐
#        sions.  Otherwise mutt will attempt to match against the
#        raw  message  received  (for  example   quoted-printable
#        encoded  or  with  encoded  headers)  which  may lead to
#        incorrect search results.
#
#thread_received
#        Type: boolean
#        Default: no
#
#        When set, mutt uses the date received  rather  than  the
#        date sent to thread messages by subject.
#
set tilde=yes
#        Type: boolean
#        Default: no
#
#        When set, the internal-pager will pad blank lines to the
#        bottom of the screen with a tilde (“~”).
#
set time_inc=250
#        Type: number
#        Default: 0
#
#        Along with $read_inc,  $write_inc,  and  $net_inc,  this
#        variable  controls  the  frequency  with  which progress
#        updates are displayed. It suppresses updates  less  than
#        $time_inc  milliseconds apart. This can improve through‐
#        put on systems with slow terminals, or when running mutt
#        on a remote system.
#
#        Also  see the “tuning” section of the manual for perfor‐
#        mance considerations.
#
set timeout=10
#        Type: number
#        Default: 600
#
#        When Mutt is waiting for user  input  either  idling  in
#        menus  or  in  an  interactive  prompt, Mutt would block
#        until input is present. Depending on the  context,  this
#        would  prevent  certain  operations  from  working, like
#        checking for new mail  or  keeping  an  IMAP  connection
#        alive.
#
#        This  variable  controls  how  many seconds Mutt will at
#        most wait until it aborts waiting  for  input,  performs
#        these operations and continues to wait for input.
#
#        A  value  of  zero or less will cause Mutt to never time
#        out.
#
set tmpdir="~/.mutt/tmp"
#        Type: path
#        Default: “”
#
#        This variable allows you  to  specify  where  Mutt  will
#        place its temporary files needed for displaying and com‐
#        posing messages.  If this variable is not set, the envi‐
#        ronment variable $TMPDIR is used.  If $TMPDIR is not set
#        then “/tmp” is used.
#
#to_chars
#        Type: string
#        Default: “ +TCFL”
#
#        Controls the character used to indicate  mail  addressed
#        to  you.   The  first character is the one used when the
#        mail is not addressed to your address.   The  second  is
#        used  when  you  are  the only recipient of the message.
#        The third is when your  address  appears  in  the  “To:”
#        header  field, but you are not the only recipient of the
#        message.  The fourth character is used when your address
#        is  specified in the “Cc:” header field, but you are not
#        the only recipient.  The  fifth  character  is  used  to
#        indicate mail that was sent by you.  The sixth character
#        is used to indicate when a mail  was  sent  to  a  mail‐
#        ing-list you subscribe to.
#

#ts_icon_format
#        Type: string
#        Default: “M%?n?AIL&ail?”
#
#        Controls  the  format  of  the  icon  title,  as long as
#        “$ts_enabled” is set.  This string is identical in  for‐
#        matting to the one used by “$status_format”.
#
#ts_enabled
#        Type: boolean
#        Default: no
#
#        Controls  whether  mutt tries to set the terminal status
#        line and icon name.  Most terminal emulators emulate the
#        status line in the window title.
#
#ts_status_format
#        Type: string
#        Default: “Mutt with %?m?%m messages&no messages?%?n? [%n NEW]?”
#
#        Controls the format of the terminal status line (or win‐
#        dow title), provided that “$ts_enabled”  has  been  set.
#        This  string  is identical in formatting to the one used
#        by “$status_format”.
#
#tunnel
#        Type: string
#        Default: “”
#
#        Setting this variable will cause mutt to open a pipe  to
#        a  command  instead  of a raw socket. You may be able to
#        use this to set up preauthenticated connections to  your
#        IMAP/POP3/SMTP server. Example:
#
#        set tunnel=”ssh -q mailhost.net /usr/local/libexec/imapd”
#
#        Note:  For  this example to work you must be able to log
#        in to the remote machine without having to enter a pass‐
#        word.
#
#        When  set,  Mutt  uses the tunnel for all remote connec‐
#        tions.  Please see “account-hook” in the manual for  how
#        to use different tunnel commands per connection.
#
set uncollapse_jump=yes
#        Type: boolean
#        Default: no
#
#        When  set, Mutt will jump to the next unread message, if
#        any, when the current thread is uncollapsed.
#
#use_8bitmime
#        Type: boolean
#        Default: no
#
#        Warning: do not set this variable unless you are using a
#        version  of  sendmail which supports the -B8BITMIME flag
#        (such as sendmail 8.8.x) or you may not be able to  send
#        mail.
#
#        When set, Mutt will invoke $sendmail with the -B8BITMIME
#        flag when sending 8-bit messages to enable ESMTP negoti‐
#        ation.
#
#use_domain
#        Type: boolean
#        Default: yes
#
#        When  set,  Mutt  will qualify all local addresses (ones
#        without the “@host” portion) with the  value  of  $host‐
#        name.  If unset, no addresses will be qualified.
#
set use_envelope_from=yes
#        Type: boolean
#        Default: no
#
#        When  set, mutt will set the envelope sender of the mes‐
#        sage.  If $envelope_from_address is set, it will be used
#        as  the  sender  address. If unset, mutt will attempt to
#        derive the sender from the “From:” header.
#
#        Note that this information is passed to sendmail command
#        using the -f command line switch. Therefore setting this
#        option is not useful if the $sendmail  variable  already
#        contains -f or if the executable pointed to by $sendmail
#        doesn't support the -f switch.
#
#use_from
#        Type: boolean
#        Default: yes
#
#        When set, Mutt will generate the  “From:”  header  field
#        when  sending  messages.   If  unset,  no “From:” header
#        field will be generated unless the user explicitly  sets
#        one using the “my_hdr” command.
#
#use_idn
#        Type: boolean
#        Default: yes
#
#        When  set, Mutt will show you international domain names
#        decoded.  Note: You can use IDNs for addresses  even  if
#        this is unset.  This variable only affects decoding.
#
set use_ipv6=no
#        Type: boolean
#        Default: yes
#
#        When  set, Mutt will look for IPv6 addresses of hosts it
#        tries to contact.  If this option is  unset,  Mutt  will
#        restrict   itself  to  IPv4  addresses.   Normally,  the
#        default should work.
#
set user_agent=no
#        Type: boolean
#        Default: yes
#
#        When set, mutt will add a “User-Agent:” header to outgo‐
#        ing  messages, indicating which version of mutt was used
#        for composing them.
#
set visual="/usr/bin/vim"
#        Type: path
#        Default: “”
#
#        Specifies the visual editor to invoke when the “~v” com‐
#        mand is given in the built-in editor.
#
set wait_key=no
#        Type: boolean
#        Default: yes
#
#        Controls  whether Mutt will ask you to press a key after
#        an external command has been invoked by these functions:
#        <shell-escape>,       <pipe-message>,      <pipe-entry>,
#        <print-message>, and <print-entry> commands.
#
#        It  is  also  used   when   viewing   attachments   with
#        “auto_view”,  provided  that  the  corresponding mailcap
#        entry has a needsterminal flag, and the external program
#        is interactive.
#
#        When  set,  Mutt  will always ask for a key. When unset,
#        Mutt will wait for a key only if  the  external  command
#        returned a non-zero status.
#
#weed
#        Type: boolean
#        Default: yes
#
#        When  set,  mutt will weed headers when displaying, for‐
#        warding, printing, or replying to messages.
#
#wrap
#        Type: number
#        Default: 0
#
#        When set to a positive value, mutt  will  wrap  text  at
#        $wrap  characters.   When  set to a negative value, mutt
#        will wrap text so that there  are  $wrap  characters  of
#        empty  space  on the right side of the terminal. Setting
#        it to zero makes mutt wrap at the terminal width.
#
#        Also see $reflow_wrap.
#
#wrap_headers
#        Type: number
#        Default: 78
#
#        This option specifies the number of  characters  to  use
#        for wrapping an outgoing message's headers. Allowed val‐
#        ues are between 78 and 998 inclusive.
#
#        Note: This option usually shouldn't be changed.  RFC5233
#        recommends  a line length of 78 (the default), so please
#        only change this  setting  when  you  know  what  you're
#        doing.
#
#wrap_search
#        Type: boolean
#        Default: yes
#
#        Controls whether searches wrap around the end.
#
#        When  set, searches will wrap around the first (or last)
#        item. When unset, incremental searches will not wrap.
#
#wrapmargin
#        Type: number
#        Default: 0
#
#        (DEPRECATED) Equivalent to setting $wrap with a negative
#        value.
#
#write_bcc
#        Type: boolean
#        Default: yes
#
#        Controls  whether  mutt  writes  out the Bcc header when
#        saving messages to FCC. Bcc headers will never be  writ‐
#        ten to a message when sending it. Note: this behavior is
#        Debian specific.
#
#write_inc
#        Type: number
#        Default: 10
#
#        When writing a mailbox, a message will be printed  every
#        $write_inc  messages to indicate progress.  If set to 0,
#        only a single message will be displayed before writing a
#        mailbox.
#
#        Also see the $read_inc, $net_inc and $time_inc variables
#        and the “tuning” section of the manual  for  performance
#        considerations.

# -- ATTACHMENTS.

attachments   +A */.*
attachments   -A text/x-vcard application/pgp.*
attachments   -A application/x-pkcs7-.*
attachments   +I text/plain
attachments   -A message/external-body
attachments   -I message/external-body

# -- KEYBINDINGS.

bind attach "-" collapse-parts
bind attach "<enter>" noop
bind attach "<esc>P" noop
bind attach "<esc>e" noop
bind attach "<left>" exit
bind attach "<return>" noop
bind attach "<right>" view-attach
bind attach "<space>" view-mailcap
bind attach "L" noop
bind attach "P" view-text
bind attach "T" noop
bind attach "\CE" noop
bind attach "\CF" noop
bind attach "\CK" noop
bind attach "b" noop
bind attach "d" noop
bind attach "e" edit-type
bind attach "f" noop
bind attach "g" noop
bind attach "h" exit
bind attach "l" view-attach
bind attach "m" noop
bind attach "p" noop
bind attach "r" noop
bind attach "s" save-entry
bind attach "u" noop
bind attach "v" noop
bind attach "|" pipe-entry
bind browser "." buffy-list
bind browser "<" check-new
bind browser "<left>" exit
bind browser "<space>" view-file
bind browser "<tab>" toggle-mailboxes
bind browser ">" select-new
bind browser "@" noop
bind browser "C" noop
bind browser "O" sort-reverse
bind browser "T" noop
bind browser "c" change-dir
bind browser "d" noop
bind browser "e" enter-mask
bind browser "h" exit
bind browser "l" select-entry
bind browser "m" noop
bind browser "o" sort
bind browser "r" noop
bind browser "s" noop
bind browser "u" noop
bind compose "<enter>" noop
bind compose "<esc>f" noop
bind compose "<esc>k" noop
bind compose "<left>" exit
bind compose "<return>" noop
bind compose "<right>" view-attach
bind compose "C" noop
bind compose "D" noop
bind compose "E" edit-mime
bind compose "F" noop
bind compose "G" noop
bind compose "M" noop
bind compose "P" pgp-menu
bind compose "R" noop
bind compose "S" noop
bind compose "T" noop
bind compose "U" noop
bind compose "\CD" noop
bind compose "\CE" noop
bind compose "\CF" noop
bind compose "\CT" noop
bind compose "\CXe" noop
bind compose "b" noop
bind compose "c" noop
bind compose "d" detach-file
bind compose "e" edit-headers
bind compose "e" noop
bind compose "f" noop
bind compose "h" exit
bind compose "i" noop
bind compose "l" view-attach
bind compose "m" noop
bind compose "r" rename-file
bind compose "s" noop
bind compose "t" tag-entry
bind compose "u" noop
bind compose "w" noop
bind compose "|" noop
bind editor "<Tab>" complete-query
bind editor "\e<backspace>" kill-word
bind editor "\e<delete>" kill-word
bind editor "^T"    complete
bind editor <delete> delete-char
bind generic "!" shell-escape
bind generic "#" noop
bind generic "$" noop
bind generic "%" noop
bind generic "&" noop
bind generic "*" help
bind generic "-" noop
bind generic "." noop
bind generic "/" search
bind generic "1" noop
bind generic "1<tab>" noop
bind generic "1G" first-entry
bind generic "1T" noop
bind generic "1a" noop
bind generic "1g" first-entry
bind generic "1t" noop
bind generic "2" noop
bind generic "3" noop
bind generic "4" noop
bind generic "5" noop
bind generic "6" noop
bind generic "7" noop
bind generic "8" noop
bind generic "9" noop
bind generic ":" enter-command
bind generic ";" tag-prefix
bind generic "<" noop
bind generic "<down>" next-entry
bind generic "<end>" last-entry
bind generic "<esc>/" noop
bind generic "<esc><tab>" noop
bind generic "<esc>C" noop
bind generic "<esc>P" noop
bind generic "<esc>V" noop
bind generic "<esc>c" noop
bind generic "<esc>d" noop
bind generic "<esc>e" noop
bind generic "<esc>k" noop
bind generic "<esc>l" noop
bind generic "<esc>n" noop
bind generic "<esc>p" noop
bind generic "<esc>r" noop
bind generic "<esc>s" noop
bind generic "<esc>t" noop
bind generic "<esc>u" noop
bind generic "<esc>v" noop
bind generic "<home>" first-entry
bind generic "<left>" noop
bind generic "<return>" select-entry
bind generic "<right>" select-entry
bind generic "<space>" noop
bind generic "<tab>" noop
bind generic "<up>" previous-entry
bind generic "=" noop
bind generic ">" noop
bind generic "?" search-reverse
bind generic "@" noop
bind generic "B" noop
bind generic "D" half-up
bind generic "F" noop
bind generic "G" last-entry
bind generic "H" top-page
bind generic "J" noop
bind generic "K" noop
bind generic "L" bottom-page
bind generic "M" middle-page
bind generic "N" search-opposite
bind generic "O" noop
bind generic "P" noop
bind generic "Q" noop
bind generic "R" noop
bind generic "S" noop
bind generic "T" noop
bind generic "U" half-down
bind generic "V" noop
bind generic "W" noop
bind generic "Z" current-bottom
bind generic "[" noop
bind generic "\CB" previous-page
bind generic "\CD" noop
bind generic "\CE" noop
bind generic "\CF" next-page
bind generic "\CJ" noop
bind generic "\CK" noop
bind generic "\CL" refresh
bind generic "\CN" noop
bind generic "\CP" noop
bind generic "\CR" noop
bind generic "\CT" noop
bind generic "\CU" noop
bind generic "\CZ" current-middle
bind generic "]" noop
bind generic "_" noop
bind generic "a" noop
bind generic "b" noop
bind generic "c" noop
bind generic "d" noop
bind generic "e" noop
bind generic "f" noop
bind generic "g" jump
bind generic "h" noop
bind generic "j" next-entry
bind generic "k" previous-entry
bind generic "l" noop
bind generic "m" noop
bind generic "n" search-next
bind generic "o" noop
bind generic "r" noop
bind generic "s" noop
bind generic "t" tag-entry
bind generic "u" noop
bind generic "v" noop
bind generic "w" noop
bind generic "x" noop
bind generic "z" current-top
bind generic "|" noop
bind index "!" shell-escape
bind index "#" noop
bind index "$" noop
bind index "%" noop
bind index "&" noop
bind index "-" collapse-thread
bind index "." buffy-list
bind index "/" search
bind index "1<tab>" previous-new-then-unread
bind index "1G" first-entry
bind index "1T" untag-pattern
bind index "1a" display-toggle-weed
bind index "1g" first-entry
bind index "1t" tag-thread
bind index ":" enter-command
bind index ";" tag-prefix
bind index "<down>" next-entry
bind index "<end>" last-entry
bind index "<enter>" noop
bind index "<esc><tab>" noop
bind index "<esc>C" noop
bind index "<esc>P" noop
bind index "<esc>V" noop
bind index "<esc>c" noop
bind index "<esc>d" noop
bind index "<esc>e" noop
bind index "<esc>k" noop
bind index "<esc>l" noop
bind index "<esc>n" noop
bind index "<esc>p" noop
bind index "<esc>r" noop
bind index "<esc>s" noop
bind index "<esc>t" noop
bind index "<esc>u" noop
bind index "<esc>v" noop
bind index "<home>" first-entry
bind index "<return>" noop
bind index "<right>" display-message
bind index "<space>" noop
bind index "<tab>" next-new-then-unread
bind index "<up>" previous-entry
bind index "?" search-reverse
bind index "@" noop
bind index "B" resend-message
bind index "D" delete-thread
bind index "F" forward-message
bind index "G" last-entry
bind index "J" next-thread
bind index "K" previous-thread
bind index "N" search-opposite
bind index "O" sort-reverse
bind index "P" print-message
bind index "R" group-reply
bind index "S" noop
bind index "T" tag-pattern
bind index "U" undelete-thread
bind index "V" noop
bind index "W" noop
bind index "\CB" previous-page
bind index "\CD" purge-message
bind index "\CE" noop
bind index "\CF" next-page
bind index "\CJ" parent-message
bind index "\CK" noop
bind index "\CN" noop
bind index "\CP" noop
bind index "\CR" noop
bind index "\CT" noop
bind index "\CU" noop
bind index "_" collapse-all
bind index "a" read-thread
bind index "b" bounce-message
bind index "c" noop
bind index "d" delete-message
bind index "e" set-flag
bind index "f" limit
bind index "g" jump
bind index "h" noop
bind index "j" next-entry
bind index "k" previous-entry
bind index "l" display-message
bind index "m" mail
bind index "n" search-next
bind index "o" sort-mailbox
bind index "r" reply
bind index "s" noop
bind index "t" tag-entry
bind index "u" undelete-message
bind index "v" view-attachments
bind index "w" noop
bind index "x" noop
bind index "|" pipe-message
bind pager "!" shell-escape
bind pager "#" noop
bind pager "$" noop
bind pager "&" noop
bind pager "*" help
bind pager "-" noop
bind pager "." buffy-list
bind pager "/" search
bind pager "1" noop
bind pager "1/" search-toggle
bind pager "1<tab>" previous-new-then-unread
bind pager "1G" top
bind pager "1T" noop
bind pager "1a" display-toggle-weed
bind pager "1g" top
bind pager "1q" toggle-quoted
bind pager "1s" skip-quoted
bind pager "1t" noop
bind pager "2" noop
bind pager "3" noop
bind pager "4" noop
bind pager "5" noop
bind pager "6" noop
bind pager "7" noop
bind pager "8" noop
bind pager "9" noop
bind pager ":" enter-command
bind pager ";" noop
bind pager "<BackSpace>" previous-line
bind pager "<PageDown>" next-page
bind pager "<PageUp>" previous-page
bind pager "<down>" next-line
bind pager "<end>" bottom
bind pager "<enter>" noop
bind pager "<esc>/" noop
bind pager "<esc>C" noop
bind pager "<esc>P" noop
bind pager "<esc>c" noop
bind pager "<esc>d" half-up
bind pager "<esc>e" noop
bind pager "<esc>j" next-thread
bind pager "<esc>k" previous-thread
bind pager "<esc>n" noop
bind pager "<esc>p" noop
bind pager "<esc>r" noop
bind pager "<esc>s" noop
bind pager "<esc>u" half-down
bind pager "<home>" top
bind pager "<left>" exit
bind pager "<return>" noop
bind pager "<right>" noop
bind pager "<space>" noop
bind pager "<tab>" next-new-then-unread
bind pager "<up>" previous-line
bind pager "?" search-reverse
bind pager "@" noop
bind pager "B" resend-message
bind pager "D" delete-thread
bind pager "F" forward-message
bind pager "G" bottom
bind pager "J" next-entry
bind pager "K" previous-entry
bind pager "L" noop
bind pager "N" search-reverse
bind pager "O" noop
bind pager "P" print-message
bind pager "R" group-reply
bind pager "S" noop
bind pager "T" noop
bind pager "U" undelete-thread
bind pager "V" noop
bind pager "W" noop
bind pager "\CB" previous-page
bind pager "\CD" purge-message
bind pager "\CE" noop
bind pager "\CF" next-page
bind pager "\CJ" parent-message
bind pager "\CK" noop
bind pager "\CL" noop
bind pager "\CL" redraw-screen
bind pager "\CN" noop
bind pager "\CP" noop
bind pager "\CR" noop
bind pager "\CU" noop
bind pager "\\" noop
bind pager "^" noop
bind pager "_" noop
bind pager "a" read-thread
bind pager "b" bounce-message
bind pager "c" noop
bind pager "d" delete-message
bind pager "e" set-flag
bind pager "f" noop
bind pager "g" jump
bind pager "h" exit
bind pager "i" noop
bind pager "j" next-line
bind pager "k" previous-line
bind pager "l" view-attachments
bind pager "m" mail
bind pager "n" search-next
bind pager "o" noop
bind pager "p" noop
bind pager "q" exit
bind pager "r" reply
bind pager "s" noop
bind pager "t" noop
bind pager "u" undelete-message
bind pager "v" view-attachments
bind pager "w" noop
bind pager "x" noop
bind pager "|" pipe-message

# -- MACROS.

macro browser "u" "<shell-escape>imapfilter-localhost-action<enter>" "delete and move messages and mailboxes"
macro compose "a" "<attach-file><tab><enter>" "change-folder and toggle mailboxes"
macro index "<left>" "<enter-command>push c<enter>" "Invoke key c"
macro index "h" "<enter-command>push c<enter>" "Invoke key c"
macro index \eb "<search>~b " "Search in message bodies"
macro index,pager "A" "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "Mark all messages as read"
macro index,pager "L" "<pipe-message>less -R<enter>" "Pipe message into less"
macro index,pager "Q" "<pipe-message>abook --add-email-quiet<return>" "Add this sender to Abook"
macro index,pager "S" "<copy-message>?<toggle-mailboxes>" "Copy a message to a mailbox"
macro index,pager "c" "<change-folder>?<toggle-mailboxes>" "change-folder and toggle-mailboxes"
macro index,pager "s" "<save-message>?<toggle-mailboxes>" "Move a message to a mailbox"
macro index,pager,attach,compose "p" "<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<enter><pipe-message>furlview -<enter><enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<enter>" "Run furlview to extract URLs out of a message"

# See: https://github.com/vain/dotfiles-pub/blob/master/.muttrc
macro index,pager "\es" "<enter-command>set my_pipe_decode=\$pipe_decode; unset pipe_decode<enter><pipe-message>mutt-save-attachments<enter><enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<enter>" "Save all attachments using 'mutt-save-attachments' (no crypto support)"

# -- COLORS.

source ~/.mutt/mutt-colors.muttrc

# -- PATCHES.

## -- compose-to-sender

#bind index,pager @ compose-to-sender

# -- CRYPTO.

source /etc/Muttrc.d/smime.rc
source /etc/Muttrc.d/gpg.rc

# -- ACCOUNTS.

unmy_hdr *
source ~/.mutt/muttrc.local.$LOCAL_CONFIG

#  vim: set ts=4 sw=4 tw=0 et :
